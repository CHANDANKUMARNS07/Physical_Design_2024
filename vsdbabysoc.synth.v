/* Generated by Yosys 0.45+3 (git sha1 d56716417, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

module clk_gate(gated_clk, free_clk, func_en, pwr_en, gating_override);
  input free_clk;
  wire free_clk;
  input func_en;
  wire func_en;
  output gated_clk;
  wire gated_clk;
  input gating_override;
  wire gating_override;
  input pwr_en;
  wire pwr_en;
  assign gated_clk = free_clk;
endmodule

module riscv_chandan(OUT, CLK, reset);
  reg \$auto$verilog_backend.cc:2352:dump_module$671  = 0;
  reg [31:0] _0000_;
  reg [31:0] _0001_;
  reg [31:0] _0002_;
  reg [31:0] _0003_;
  reg [31:0] _0004_;
  reg [31:0] _0005_;
  reg [31:0] _0006_;
  reg [31:0] _0007_;
  reg [31:0] _0008_;
  reg [31:0] _0009_;
  reg [31:0] _0010_;
  reg [31:0] _0011_;
  reg [31:0] _0012_;
  reg [31:0] _0013_;
  reg [31:0] _0014_;
  reg [31:0] _0015_;
  reg [31:0] _0016_;
  reg [31:0] _0017_;
  reg [31:0] _0018_;
  reg [31:0] _0019_;
  reg [31:0] _0020_;
  reg [31:0] _0021_;
  reg [31:0] _0022_;
  reg [31:0] _0023_;
  reg [31:0] _0024_;
  reg [31:0] _0025_;
  reg [31:0] _0026_;
  reg [31:0] _0027_;
  reg [31:0] _0028_;
  reg [31:0] _0029_;
  reg [31:0] _0030_;
  reg [31:0] _0031_;
  reg [31:0] _0032_;
  reg [31:0] _0033_;
  reg [31:0] _0034_;
  reg [31:0] _0035_;
  reg [31:0] _0036_;
  reg [31:0] _0037_;
  reg [31:0] _0038_;
  reg [31:0] _0039_;
  reg [31:0] _0040_;
  reg [31:0] _0041_;
  reg [31:0] _0042_;
  reg [31:0] _0043_;
  reg [31:0] _0044_;
  reg [31:0] _0045_;
  reg [31:0] _0046_;
  reg [31:0] _0047_;
  reg [31:0] _0048_;
  reg [31:0] _0049_;
  reg [31:0] _0050_;
  reg [31:0] _0051_;
  reg [31:0] _0052_;
  reg [31:0] _0053_;
  reg [31:0] _0054_;
  reg [31:0] _0055_;
  reg [31:0] _0056_;
  reg [31:0] _0057_;
  reg [31:0] _0058_;
  reg [31:0] _0059_;
  reg [31:0] _0060_;
  reg [31:0] _0061_;
  reg [31:0] _0062_;
  reg [31:0] _0063_;
  reg [31:0] _0064_;
  reg [31:0] _0065_;
  reg [31:0] _0066_;
  reg [31:0] _0067_;
  reg [31:0] _0068_;
  reg [31:0] _0069_;
  reg [31:0] _0070_;
  reg [31:0] _0071_;
  reg [31:0] _0072_;
  reg [31:0] _0073_;
  reg [31:0] _0074_;
  reg [31:0] _0075_;
  reg [31:0] _0076_;
  reg [31:0] _0077_;
  reg [31:0] _0078_;
  reg [31:0] _0079_;
  reg [31:0] _0080_;
  reg [31:0] _0081_;
  reg [31:0] _0082_;
  reg [31:0] _0083_;
  reg [31:0] _0084_;
  reg [31:0] _0085_;
  reg [31:0] _0086_;
  reg [31:0] _0087_;
  reg [31:0] _0088_;
  reg [31:0] _0089_;
  reg [31:0] _0090_;
  reg [31:0] _0091_;
  reg [31:0] _0092_;
  reg [31:0] _0093_;
  reg [31:0] _0094_;
  reg [31:0] _0095_;
  reg [31:0] _0096_;
  reg [31:0] _0097_;
  reg [31:0] _0098_;
  reg [31:0] _0099_;
  reg [31:0] _0100_;
  reg [31:0] _0101_;
  reg [31:0] _0102_;
  reg [31:0] _0103_;
  reg [31:0] _0104_;
  reg [31:0] _0105_;
  reg [31:0] _0106_;
  reg [31:0] _0107_;
  reg [31:0] _0108_;
  reg [31:0] _0109_;
  reg [31:0] _0110_;
  reg [31:0] _0111_;
  reg [31:0] _0112_;
  reg [31:0] _0113_;
  reg [31:0] _0114_;
  reg [31:0] _0115_;
  reg [31:0] _0116_;
  reg [31:0] _0117_;
  reg [31:0] _0118_;
  reg [31:0] _0119_;
  reg [31:0] _0120_;
  reg [31:0] _0121_;
  reg [31:0] _0122_;
  reg [31:0] _0123_;
  reg [31:0] _0124_;
  reg [31:0] _0125_;
  reg [31:0] _0126_;
  reg [31:0] _0127_;
  reg [31:0] _0128_;
  reg [31:0] _0129_;
  reg [31:0] _0130_;
  reg [31:0] _0131_;
  reg [31:0] _0132_;
  reg [31:0] _0133_;
  reg [31:0] _0134_;
  reg [31:0] _0135_;
  reg [31:0] _0136_;
  reg [31:0] _0137_;
  reg [31:0] _0138_;
  reg [31:0] _0139_;
  reg [31:0] _0140_;
  reg [31:0] _0141_;
  reg [31:0] _0142_;
  reg _0143_;
  reg _0144_;
  reg _0145_;
  reg _0146_;
  reg _0147_;
  reg [31:0] _0148_;
  reg [31:0] _0149_;
  reg _0150_;
  reg [31:0] _0151_;
  reg [31:0] _0152_;
  reg [31:0] _0153_;
  reg [31:0] _0154_;
  reg _0155_;
  reg _0156_;
  reg _0157_;
  reg _0158_;
  reg _0159_;
  reg _0160_;
  reg _0161_;
  reg _0162_;
  reg _0163_;
  reg _0164_;
  reg _0165_;
  reg _0166_;
  reg _0167_;
  reg _0168_;
  reg _0169_;
  reg _0170_;
  reg _0171_;
  reg _0172_;
  reg _0173_;
  reg _0174_;
  reg _0175_;
  reg _0176_;
  reg _0177_;
  reg _0178_;
  reg _0179_;
  reg _0180_;
  reg _0181_;
  reg _0182_;
  reg _0183_;
  reg _0184_;
  reg _0185_;
  reg _0186_;
  reg _0187_;
  reg _0188_;
  reg _0189_;
  reg _0190_;
  reg _0191_;
  reg _0192_;
  reg _0193_;
  reg _0194_;
  reg _0195_;
  reg _0196_;
  reg _0197_;
  reg _0198_;
  reg _0199_;
  reg _0200_;
  reg _0201_;
  reg _0202_;
  reg _0203_;
  reg _0204_;
  reg _0205_;
  reg _0206_;
  reg _0207_;
  reg _0208_;
  reg _0209_;
  reg _0210_;
  reg _0211_;
  reg _0212_;
  reg _0213_;
  reg _0214_;
  reg _0215_;
  reg _0216_;
  reg _0217_;
  reg _0218_;
  reg _0219_;
  reg _0220_;
  reg _0221_;
  reg _0222_;
  reg _0223_;
  reg _0224_;
  reg _0225_;
  reg _0226_;
  reg _0227_;
  reg _0228_;
  reg _0229_;
  reg _0230_;
  reg _0231_;
  reg _0232_;
  reg _0233_;
  reg _0234_;
  reg _0235_;
  reg _0236_;
  reg _0237_;
  reg _0238_;
  reg _0239_;
  reg _0240_;
  reg _0241_;
  reg _0242_;
  reg _0243_;
  reg [31:0] _0244_;
  reg [31:0] _0245_;
  reg [31:0] _0246_;
  reg [31:0] _0247_;
  reg [4:0] _0248_;
  reg [4:0] _0249_;
  reg [4:0] _0250_;
  reg [4:0] _0251_;
  reg _0252_;
  reg _0253_;
  reg _0254_;
  reg _0255_;
  reg _0256_;
  reg _0257_;
  reg _0258_;
  reg [3:0] _0259_;
  reg [4:0] _0260_;
  reg _0261_;
  reg [4:0] _0262_;
  reg _0263_;
  reg [31:0] _0264_;
  reg [31:0] _0265_;
  reg [31:0] _0266_;
  reg _0267_;
  reg _0268_;
  reg _0269_;
  reg _0270_;
  reg _0271_;
  reg _0272_;
  reg _0273_;
  reg [9:0] _0274_;
  reg [31:0] _0275_;
  reg [31:0] _0276_;
  reg [31:0] _0277_;
  reg [31:0] _0278_;
  reg [31:0] _0279_;
  reg [31:0] _0280_;
  reg [31:0] _0281_;
  reg [31:0] _0282_;
  reg [31:0] _0283_;
  reg [31:0] _0284_;
  reg [31:0] _0285_;
  reg [31:0] _0286_;
  reg [31:0] _0287_;
  reg [31:0] _0288_;
  wire [31:0] _0289_;
  wire [31:0] _0290_;
  wire [63:0] _0291_;
  wire [63:0] _0292_;
  wire [63:0] _0293_;
  wire [63:0] _0294_;
  wire [63:0] _0295_;
  wire [63:0] _0296_;
  wire [31:0] _0297_;
  wire [63:0] _0298_;
  wire [63:0] _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire [63:0] _0401_;
  wire [63:0] _0402_;
  wire [63:0] _0403_;
  wire [63:0] _0404_;
  wire [63:0] _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire [3:0] _0535_;
  reg [31:0] _0536_;
  wire [3:0] _0537_;
  reg [31:0] _0538_;
  wire [4:0] _0539_;
  reg [31:0] _0540_;
  wire [4:0] _0541_;
  reg [31:0] _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire [63:0] _0579_;
  wire [63:0] _0580_;
  wire [63:0] _0581_;
  wire [63:0] _0582_;
  wire [63:0] _0583_;
  wire [63:0] _0584_;
  wire [63:0] _0585_;
  wire [63:0] _0586_;
  wire [63:0] _0587_;
  wire [31:0] _0588_;
  wire [31:0] _0589_;
  wire [63:0] _0590_;
  wire [63:0] _0591_;
  wire [63:0] _0592_;
  wire [63:0] _0593_;
  wire [63:0] _0594_;
  wire [63:0] _0595_;
  wire [63:0] _0596_;
  wire [63:0] _0597_;
  wire [63:0] _0598_;
  wire [63:0] _0599_;
  wire [63:0] _0600_;
  wire [63:0] _0601_;
  wire [63:0] _0602_;
  wire [63:0] _0603_;
  wire [63:0] _0604_;
  wire [63:0] _0605_;
  wire [63:0] _0606_;
  wire [63:0] _0607_;
  wire [63:0] _0608_;
  wire [63:0] _0609_;
  wire [63:0] _0610_;
  wire [63:0] _0611_;
  wire [63:0] _0612_;
  wire [63:0] _0613_;
  wire [63:0] _0614_;
  wire [63:0] _0615_;
  wire [4:0] _0616_;
  wire [31:0] _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire [31:0] _0624_;
  wire [31:0] _0625_;
  wire [31:0] _0626_;
  wire [31:0] _0627_;
  wire [31:0] _0628_;
  wire [31:0] _0629_;
  wire [31:0] _0630_;
  wire [31:0] _0631_;
  wire [31:0] _0632_;
  wire [31:0] _0633_;
  wire [31:0] _0634_;
  wire [31:0] _0635_;
  wire [31:0] _0636_;
  wire [31:0] _0637_;
  wire [31:0] _0638_;
  wire [31:0] _0639_;
  wire [31:0] _0640_;
  wire [31:0] _0641_;
  wire [31:0] _0642_;
  wire [31:0] _0643_;
  wire [31:0] _0644_;
  wire [31:0] _0645_;
  wire [31:0] _0646_;
  wire [31:0] _0647_;
  wire [31:0] _0648_;
  wire [31:0] _0649_;
  wire [31:0] _0650_;
  wire [31:0] _0651_;
  wire [31:0] _0652_;
  wire [31:0] _0653_;
  wire [31:0] _0654_;
  wire [31:0] _0655_;
  wire [31:0] _0656_;
  wire [31:0] _0657_;
  wire [31:0] _0658_;
  wire [31:0] _0659_;
  wire [31:0] _0660_;
  wire [31:0] _0661_;
  wire [31:0] _0662_;
  wire [31:0] _0663_;
  wire [31:0] _0664_;
  wire [31:0] _0665_;
  wire [31:0] _0666_;
  wire [31:0] _0667_;
  wire [31:0] _0668_;
  wire [31:0] _0669_;
  wire [31:0] _0670_;
  wire [31:0] _0671_;
  wire [31:0] _0672_;
  wire [31:0] _0673_;
  wire [31:0] _0674_;
  wire [31:0] _0675_;
  wire [31:0] _0676_;
  wire [31:0] _0677_;
  wire [31:0] _0678_;
  wire [31:0] _0679_;
  wire [31:0] _0680_;
  wire [31:0] _0681_;
  wire [31:0] _0682_;
  wire [31:0] _0683_;
  wire [31:0] _0684_;
  wire [31:0] _0685_;
  wire [31:0] _0686_;
  wire [31:0] _0687_;
  wire [31:0] _0688_;
  wire [31:0] _0689_;
  wire [31:0] _0690_;
  wire [31:0] _0691_;
  wire [31:0] _0692_;
  wire [31:0] _0693_;
  wire [31:0] _0694_;
  wire [31:0] _0695_;
  wire [31:0] _0696_;
  wire [31:0] _0697_;
  wire [31:0] _0698_;
  wire [31:0] _0699_;
  wire [31:0] _0700_;
  wire [31:0] _0701_;
  wire [31:0] _0702_;
  wire [31:0] _0703_;
  wire [31:0] _0704_;
  wire [31:0] _0705_;
  wire [31:0] _0706_;
  wire [31:0] _0707_;
  wire [31:0] _0708_;
  wire [31:0] _0709_;
  wire [31:0] _0710_;
  wire [31:0] _0711_;
  wire [31:0] _0712_;
  wire [31:0] _0713_;
  wire [31:0] _0714_;
  wire [31:0] _0715_;
  wire [31:0] _0716_;
  wire [31:0] _0717_;
  wire [31:0] _0718_;
  wire [31:0] _0719_;
  wire [31:0] _0720_;
  wire [31:0] _0721_;
  wire [31:0] _0722_;
  wire [31:0] _0723_;
  wire [31:0] _0724_;
  wire [31:0] _0725_;
  wire [31:0] _0726_;
  wire [31:0] _0727_;
  wire [31:0] _0728_;
  wire [31:0] _0729_;
  wire [31:0] _0730_;
  wire [63:0] _0731_;
  wire [63:0] _0732_;
  wire _0733_;
  wire _0734_;
  input CLK;
  wire CLK;
  reg [31:0] \CPU_Dmem_value_a4[0] ;
  reg [31:0] \CPU_Dmem_value_a4[10] ;
  reg [31:0] \CPU_Dmem_value_a4[11] ;
  reg [31:0] \CPU_Dmem_value_a4[12] ;
  reg [31:0] \CPU_Dmem_value_a4[13] ;
  reg [31:0] \CPU_Dmem_value_a4[14] ;
  reg [31:0] \CPU_Dmem_value_a4[15] ;
  reg [31:0] \CPU_Dmem_value_a4[1] ;
  reg [31:0] \CPU_Dmem_value_a4[2] ;
  reg [31:0] \CPU_Dmem_value_a4[3] ;
  reg [31:0] \CPU_Dmem_value_a4[4] ;
  reg [31:0] \CPU_Dmem_value_a4[5] ;
  reg [31:0] \CPU_Dmem_value_a4[6] ;
  reg [31:0] \CPU_Dmem_value_a4[7] ;
  reg [31:0] \CPU_Dmem_value_a4[8] ;
  reg [31:0] \CPU_Dmem_value_a4[9] ;
  reg [31:0] \CPU_Dmem_value_a5[0] ;
  reg [31:0] \CPU_Dmem_value_a5[10] ;
  reg [31:0] \CPU_Dmem_value_a5[11] ;
  reg [31:0] \CPU_Dmem_value_a5[12] ;
  reg [31:0] \CPU_Dmem_value_a5[13] ;
  reg [31:0] \CPU_Dmem_value_a5[14] ;
  reg [31:0] \CPU_Dmem_value_a5[15] ;
  reg [31:0] \CPU_Dmem_value_a5[1] ;
  reg [31:0] \CPU_Dmem_value_a5[2] ;
  reg [31:0] \CPU_Dmem_value_a5[3] ;
  reg [31:0] \CPU_Dmem_value_a5[4] ;
  reg [31:0] \CPU_Dmem_value_a5[5] ;
  reg [31:0] \CPU_Dmem_value_a5[6] ;
  reg [31:0] \CPU_Dmem_value_a5[7] ;
  reg [31:0] \CPU_Dmem_value_a5[8] ;
  reg [31:0] \CPU_Dmem_value_a5[9] ;
  reg [31:0] \CPU_Imem_instr_a1[0] ;
  reg [31:0] \CPU_Imem_instr_a1[1] ;
  reg [31:0] \CPU_Imem_instr_a1[2] ;
  reg [31:0] \CPU_Imem_instr_a1[3] ;
  reg [31:0] \CPU_Imem_instr_a1[4] ;
  reg [31:0] \CPU_Imem_instr_a1[5] ;
  reg [31:0] \CPU_Imem_instr_a1[6] ;
  reg [31:0] \CPU_Imem_instr_a1[7] ;
  reg [31:0] \CPU_Imem_instr_a1[8] ;
  reg [31:0] \CPU_Imem_instr_a1[9] ;
  reg [31:0] \CPU_Xreg_value_a3[0] ;
  reg [31:0] \CPU_Xreg_value_a3[10] ;
  reg [31:0] \CPU_Xreg_value_a3[11] ;
  reg [31:0] \CPU_Xreg_value_a3[12] ;
  reg [31:0] \CPU_Xreg_value_a3[13] ;
  reg [31:0] \CPU_Xreg_value_a3[14] ;
  reg [31:0] \CPU_Xreg_value_a3[15] ;
  reg [31:0] \CPU_Xreg_value_a3[16] ;
  reg [31:0] \CPU_Xreg_value_a3[17] ;
  reg [31:0] \CPU_Xreg_value_a3[18] ;
  reg [31:0] \CPU_Xreg_value_a3[19] ;
  reg [31:0] \CPU_Xreg_value_a3[1] ;
  reg [31:0] \CPU_Xreg_value_a3[20] ;
  reg [31:0] \CPU_Xreg_value_a3[21] ;
  reg [31:0] \CPU_Xreg_value_a3[22] ;
  reg [31:0] \CPU_Xreg_value_a3[23] ;
  reg [31:0] \CPU_Xreg_value_a3[24] ;
  reg [31:0] \CPU_Xreg_value_a3[25] ;
  reg [31:0] \CPU_Xreg_value_a3[26] ;
  reg [31:0] \CPU_Xreg_value_a3[27] ;
  reg [31:0] \CPU_Xreg_value_a3[28] ;
  reg [31:0] \CPU_Xreg_value_a3[29] ;
  reg [31:0] \CPU_Xreg_value_a3[2] ;
  reg [31:0] \CPU_Xreg_value_a3[30] ;
  reg [31:0] \CPU_Xreg_value_a3[31] ;
  reg [31:0] \CPU_Xreg_value_a3[3] ;
  reg [31:0] \CPU_Xreg_value_a3[4] ;
  reg [31:0] \CPU_Xreg_value_a3[5] ;
  reg [31:0] \CPU_Xreg_value_a3[6] ;
  reg [31:0] \CPU_Xreg_value_a3[7] ;
  reg [31:0] \CPU_Xreg_value_a3[8] ;
  reg [31:0] \CPU_Xreg_value_a3[9] ;
  reg [31:0] \CPU_Xreg_value_a4[0] ;
  reg [31:0] \CPU_Xreg_value_a4[10] ;
  reg [31:0] \CPU_Xreg_value_a4[11] ;
  reg [31:0] \CPU_Xreg_value_a4[12] ;
  reg [31:0] \CPU_Xreg_value_a4[13] ;
  reg [31:0] \CPU_Xreg_value_a4[14] ;
  reg [31:0] \CPU_Xreg_value_a4[15] ;
  reg [31:0] \CPU_Xreg_value_a4[16] ;
  reg [31:0] \CPU_Xreg_value_a4[17] ;
  reg [31:0] \CPU_Xreg_value_a4[18] ;
  reg [31:0] \CPU_Xreg_value_a4[19] ;
  reg [31:0] \CPU_Xreg_value_a4[1] ;
  reg [31:0] \CPU_Xreg_value_a4[20] ;
  reg [31:0] \CPU_Xreg_value_a4[21] ;
  reg [31:0] \CPU_Xreg_value_a4[22] ;
  reg [31:0] \CPU_Xreg_value_a4[23] ;
  reg [31:0] \CPU_Xreg_value_a4[24] ;
  reg [31:0] \CPU_Xreg_value_a4[25] ;
  reg [31:0] \CPU_Xreg_value_a4[26] ;
  reg [31:0] \CPU_Xreg_value_a4[27] ;
  reg [31:0] \CPU_Xreg_value_a4[28] ;
  reg [31:0] \CPU_Xreg_value_a4[29] ;
  reg [31:0] \CPU_Xreg_value_a4[2] ;
  reg [31:0] \CPU_Xreg_value_a4[30] ;
  reg [31:0] \CPU_Xreg_value_a4[31] ;
  reg [31:0] \CPU_Xreg_value_a4[3] ;
  reg [31:0] \CPU_Xreg_value_a4[4] ;
  reg [31:0] \CPU_Xreg_value_a4[5] ;
  reg [31:0] \CPU_Xreg_value_a4[6] ;
  reg [31:0] \CPU_Xreg_value_a4[7] ;
  reg [31:0] \CPU_Xreg_value_a4[8] ;
  reg [31:0] \CPU_Xreg_value_a4[9] ;
  reg [31:0] \CPU_Xreg_value_a5[0] ;
  reg [31:0] \CPU_Xreg_value_a5[10] ;
  reg [31:0] \CPU_Xreg_value_a5[11] ;
  reg [31:0] \CPU_Xreg_value_a5[12] ;
  reg [31:0] \CPU_Xreg_value_a5[13] ;
  reg [31:0] \CPU_Xreg_value_a5[14] ;
  reg [31:0] \CPU_Xreg_value_a5[15] ;
  reg [31:0] \CPU_Xreg_value_a5[16] ;
  reg [31:0] \CPU_Xreg_value_a5[17] ;
  reg [31:0] \CPU_Xreg_value_a5[18] ;
  reg [31:0] \CPU_Xreg_value_a5[19] ;
  reg [31:0] \CPU_Xreg_value_a5[1] ;
  reg [31:0] \CPU_Xreg_value_a5[20] ;
  reg [31:0] \CPU_Xreg_value_a5[21] ;
  reg [31:0] \CPU_Xreg_value_a5[22] ;
  reg [31:0] \CPU_Xreg_value_a5[23] ;
  reg [31:0] \CPU_Xreg_value_a5[24] ;
  reg [31:0] \CPU_Xreg_value_a5[25] ;
  reg [31:0] \CPU_Xreg_value_a5[26] ;
  reg [31:0] \CPU_Xreg_value_a5[27] ;
  reg [31:0] \CPU_Xreg_value_a5[28] ;
  reg [31:0] \CPU_Xreg_value_a5[29] ;
  reg [31:0] \CPU_Xreg_value_a5[2] ;
  reg [31:0] \CPU_Xreg_value_a5[30] ;
  reg [31:0] \CPU_Xreg_value_a5[31] ;
  reg [31:0] \CPU_Xreg_value_a5[3] ;
  reg [31:0] \CPU_Xreg_value_a5[4] ;
  reg [31:0] \CPU_Xreg_value_a5[5] ;
  reg [31:0] \CPU_Xreg_value_a5[6] ;
  reg [31:0] \CPU_Xreg_value_a5[7] ;
  reg [31:0] \CPU_Xreg_value_a5[8] ;
  reg [31:0] \CPU_Xreg_value_a5[9] ;
  wire [31:0] CPU_br_tgt_pc_a2;
  reg [31:0] CPU_br_tgt_pc_a3;
  wire CPU_clk_chandan_a0;
  reg CPU_clk_chandan_a1;
  reg CPU_clk_chandan_a2;
  reg CPU_clk_chandan_a3;
  reg CPU_clk_chandan_a4;
  reg CPU_clk_chandan_a5;
  wire [10:0] CPU_dec_bits_a1;
  wire [3:0] CPU_dmem_addr_a4;
  reg [31:0] CPU_dmem_rd_data_a5;
  wire CPU_dmem_rd_en_a4;
  wire [31:0] CPU_dmem_wr_data_a4;
  wire CPU_dmem_wr_en_a4;
  wire [2:0] CPU_funct3_a1;
  wire CPU_funct3_valid_a1;
  wire [6:0] CPU_funct7_a1;
  wire CPU_funct7_valid_a1;
  wire [31:0] CPU_imem_rd_addr_a0;
  reg [31:0] CPU_imem_rd_addr_a1;
  wire [31:0] CPU_imem_rd_data_a1;
  wire CPU_imem_rd_en_a0;
  reg CPU_imem_rd_en_a1;
  wire [31:0] CPU_imm_a1;
  reg [31:0] CPU_imm_a2;
  reg [31:0] CPU_imm_a3;
  wire [31:0] CPU_inc_pc_a1;
  reg [31:0] CPU_inc_pc_a2;
  reg [31:0] CPU_inc_pc_a3;
  wire [31:0] CPU_instr_a1;
  wire CPU_is_add_a1;
  reg CPU_is_add_a2;
  reg CPU_is_add_a3;
  wire CPU_is_addi_a1;
  reg CPU_is_addi_a2;
  reg CPU_is_addi_a3;
  wire CPU_is_and_a1;
  reg CPU_is_and_a2;
  reg CPU_is_and_a3;
  wire CPU_is_andi_a1;
  reg CPU_is_andi_a2;
  reg CPU_is_andi_a3;
  wire CPU_is_auipc_a1;
  reg CPU_is_auipc_a2;
  reg CPU_is_auipc_a3;
  wire CPU_is_b_instr_a1;
  wire CPU_is_beq_a1;
  reg CPU_is_beq_a2;
  reg CPU_is_beq_a3;
  reg CPU_is_beq_a4;
  reg CPU_is_beq_a5;
  wire CPU_is_bge_a1;
  reg CPU_is_bge_a2;
  reg CPU_is_bge_a3;
  reg CPU_is_bge_a4;
  reg CPU_is_bge_a5;
  wire CPU_is_bgeu_a1;
  reg CPU_is_bgeu_a2;
  reg CPU_is_bgeu_a3;
  reg CPU_is_bgeu_a4;
  reg CPU_is_bgeu_a5;
  wire CPU_is_blt_a1;
  reg CPU_is_blt_a2;
  reg CPU_is_blt_a3;
  reg CPU_is_blt_a4;
  reg CPU_is_blt_a5;
  wire CPU_is_bltu_a1;
  reg CPU_is_bltu_a2;
  reg CPU_is_bltu_a3;
  reg CPU_is_bltu_a4;
  reg CPU_is_bltu_a5;
  wire CPU_is_bne_a1;
  reg CPU_is_bne_a2;
  reg CPU_is_bne_a3;
  reg CPU_is_bne_a4;
  reg CPU_is_bne_a5;
  wire CPU_is_i_instr_a1;
  wire CPU_is_j_instr_a1;
  wire CPU_is_jal_a1;
  reg CPU_is_jal_a2;
  reg CPU_is_jal_a3;
  wire CPU_is_jalr_a1;
  reg CPU_is_jalr_a2;
  reg CPU_is_jalr_a3;
  wire CPU_is_jump_a1;
  reg CPU_is_jump_a2;
  reg CPU_is_jump_a3;
  wire CPU_is_load_a1;
  reg CPU_is_load_a2;
  reg CPU_is_load_a3;
  wire CPU_is_lui_a1;
  reg CPU_is_lui_a2;
  reg CPU_is_lui_a3;
  wire CPU_is_or_a1;
  reg CPU_is_or_a2;
  reg CPU_is_or_a3;
  wire CPU_is_ori_a1;
  reg CPU_is_ori_a2;
  reg CPU_is_ori_a3;
  wire CPU_is_r_instr_a1;
  wire CPU_is_s_instr_a1;
  reg CPU_is_s_instr_a2;
  reg CPU_is_s_instr_a3;
  reg CPU_is_s_instr_a4;
  wire CPU_is_sb_a1;
  reg CPU_is_sb_a2;
  reg CPU_is_sb_a3;
  reg CPU_is_sb_a4;
  reg CPU_is_sb_a5;
  wire CPU_is_sh_a1;
  reg CPU_is_sh_a2;
  reg CPU_is_sh_a3;
  reg CPU_is_sh_a4;
  reg CPU_is_sh_a5;
  wire CPU_is_sll_a1;
  reg CPU_is_sll_a2;
  reg CPU_is_sll_a3;
  wire CPU_is_slli_a1;
  reg CPU_is_slli_a2;
  reg CPU_is_slli_a3;
  wire CPU_is_slt_a1;
  reg CPU_is_slt_a2;
  reg CPU_is_slt_a3;
  wire CPU_is_slti_a1;
  reg CPU_is_slti_a2;
  reg CPU_is_slti_a3;
  wire CPU_is_sltiu_a1;
  reg CPU_is_sltiu_a2;
  reg CPU_is_sltiu_a3;
  wire CPU_is_sltu_a1;
  reg CPU_is_sltu_a2;
  reg CPU_is_sltu_a3;
  wire CPU_is_sra_a1;
  reg CPU_is_sra_a2;
  reg CPU_is_sra_a3;
  wire CPU_is_srai_a1;
  reg CPU_is_srai_a2;
  reg CPU_is_srai_a3;
  wire CPU_is_srl_a1;
  reg CPU_is_srl_a2;
  reg CPU_is_srl_a3;
  wire CPU_is_srli_a1;
  reg CPU_is_srli_a2;
  reg CPU_is_srli_a3;
  wire CPU_is_sub_a1;
  reg CPU_is_sub_a2;
  reg CPU_is_sub_a3;
  wire CPU_is_sw_a1;
  reg CPU_is_sw_a2;
  reg CPU_is_sw_a3;
  reg CPU_is_sw_a4;
  reg CPU_is_sw_a5;
  wire CPU_is_u_instr_a1;
  wire CPU_is_xor_a1;
  reg CPU_is_xor_a2;
  reg CPU_is_xor_a3;
  wire CPU_is_xori_a1;
  reg CPU_is_xori_a2;
  reg CPU_is_xori_a3;
  wire [31:0] CPU_jalr_tgt_pc_a2;
  reg [31:0] CPU_jalr_tgt_pc_a3;
  wire [31:0] CPU_ld_data_a5;
  wire [6:0] CPU_opcode_a1;
  wire [31:0] CPU_pc_a0;
  reg [31:0] CPU_pc_a1;
  reg [31:0] CPU_pc_a2;
  reg [31:0] CPU_pc_a3;
  reg [4:0] CPU_rd_a2;
  reg [4:0] CPU_rd_a3;
  reg [4:0] CPU_rd_a4;
  reg [4:0] CPU_rd_a5;
  wire CPU_rd_valid_a1;
  reg CPU_rd_valid_a2;
  reg CPU_rd_valid_a3;
  reg CPU_rd_valid_a4;
  wire CPU_reset_a0;
  reg CPU_reset_a1;
  reg CPU_reset_a2;
  reg CPU_reset_a3;
  reg CPU_reset_a4;
  wire [31:0] CPU_result_a3;
  reg [5:2] CPU_result_a4;
  wire [31:0] CPU_rf_rd_data1_a2;
  wire [31:0] CPU_rf_rd_data2_a2;
  wire CPU_rf_rd_en1_a2;
  wire CPU_rf_rd_en2_a2;
  wire [4:0] CPU_rf_rd_index1_a2;
  wire [4:0] CPU_rf_rd_index2_a2;
  wire [31:0] CPU_rf_wr_data_a3;
  wire CPU_rf_wr_en_a3;
  wire [4:0] CPU_rf_wr_index_a3;
  reg [4:0] CPU_rs1_a2;
  wire CPU_rs1_valid_a1;
  reg CPU_rs1_valid_a2;
  reg [4:0] CPU_rs2_a2;
  wire CPU_rs2_valid_a1;
  reg CPU_rs2_valid_a2;
  wire CPU_sltiu_result_a3;
  wire CPU_sltu_result_a3;
  wire [31:0] CPU_src1_value_a2;
  reg [31:0] CPU_src1_value_a3;
  wire [31:0] CPU_src2_value_a2;
  reg [31:0] CPU_src2_value_a3;
  reg [31:0] CPU_src2_value_a4;
  wire CPU_taken_br_a3;
  wire CPU_valid_a3;
  reg CPU_valid_a4;
  wire CPU_valid_jump_a3;
  reg CPU_valid_jump_a4;
  reg CPU_valid_jump_a5;
  wire CPU_valid_load_a3;
  reg CPU_valid_load_a4;
  reg CPU_valid_load_a5;
  wire CPU_valid_taken_br_a3;
  reg CPU_valid_taken_br_a4;
  reg CPU_valid_taken_br_a5;
  wire \L1_CPU_Dmem[0].L1_wr_a4 ;
  wire \L1_CPU_Dmem[10].L1_wr_a4 ;
  wire \L1_CPU_Dmem[11].L1_wr_a4 ;
  wire \L1_CPU_Dmem[12].L1_wr_a4 ;
  wire \L1_CPU_Dmem[13].L1_wr_a4 ;
  wire \L1_CPU_Dmem[14].L1_wr_a4 ;
  wire \L1_CPU_Dmem[15].L1_wr_a4 ;
  wire \L1_CPU_Dmem[1].L1_wr_a4 ;
  wire \L1_CPU_Dmem[2].L1_wr_a4 ;
  wire \L1_CPU_Dmem[3].L1_wr_a4 ;
  wire \L1_CPU_Dmem[4].L1_wr_a4 ;
  wire \L1_CPU_Dmem[5].L1_wr_a4 ;
  wire \L1_CPU_Dmem[6].L1_wr_a4 ;
  wire \L1_CPU_Dmem[7].L1_wr_a4 ;
  wire \L1_CPU_Dmem[8].L1_wr_a4 ;
  wire \L1_CPU_Dmem[9].L1_wr_a4 ;
  wire \L1_CPU_Xreg[0].L1_wr_a3 ;
  wire \L1_CPU_Xreg[10].L1_wr_a3 ;
  wire \L1_CPU_Xreg[11].L1_wr_a3 ;
  wire \L1_CPU_Xreg[12].L1_wr_a3 ;
  wire \L1_CPU_Xreg[13].L1_wr_a3 ;
  wire \L1_CPU_Xreg[14].L1_wr_a3 ;
  wire \L1_CPU_Xreg[15].L1_wr_a3 ;
  wire \L1_CPU_Xreg[16].L1_wr_a3 ;
  wire \L1_CPU_Xreg[17].L1_wr_a3 ;
  wire \L1_CPU_Xreg[18].L1_wr_a3 ;
  wire \L1_CPU_Xreg[19].L1_wr_a3 ;
  wire \L1_CPU_Xreg[1].L1_wr_a3 ;
  wire \L1_CPU_Xreg[20].L1_wr_a3 ;
  wire \L1_CPU_Xreg[21].L1_wr_a3 ;
  wire \L1_CPU_Xreg[22].L1_wr_a3 ;
  wire \L1_CPU_Xreg[23].L1_wr_a3 ;
  wire \L1_CPU_Xreg[24].L1_wr_a3 ;
  wire \L1_CPU_Xreg[25].L1_wr_a3 ;
  wire \L1_CPU_Xreg[26].L1_wr_a3 ;
  wire \L1_CPU_Xreg[27].L1_wr_a3 ;
  wire \L1_CPU_Xreg[28].L1_wr_a3 ;
  wire \L1_CPU_Xreg[29].L1_wr_a3 ;
  wire \L1_CPU_Xreg[2].L1_wr_a3 ;
  wire \L1_CPU_Xreg[30].L1_wr_a3 ;
  wire \L1_CPU_Xreg[31].L1_wr_a3 ;
  wire \L1_CPU_Xreg[3].L1_wr_a3 ;
  wire \L1_CPU_Xreg[4].L1_wr_a3 ;
  wire \L1_CPU_Xreg[5].L1_wr_a3 ;
  wire \L1_CPU_Xreg[6].L1_wr_a3 ;
  wire \L1_CPU_Xreg[7].L1_wr_a3 ;
  wire \L1_CPU_Xreg[8].L1_wr_a3 ;
  wire \L1_CPU_Xreg[9].L1_wr_a3 ;
  output [9:0] OUT;
  reg [9:0] OUT;
  wire clk;
  wire clkP_CPU_dmem_rd_en_a5;
  wire clkP_CPU_rd_valid_a2;
  wire clkP_CPU_rd_valid_a3;
  wire clkP_CPU_rd_valid_a4;
  wire clkP_CPU_rd_valid_a5;
  wire clkP_CPU_rs1_valid_a2;
  wire clkP_CPU_rs2_valid_a2;
  reg [31:0] \instrs[0] ;
  reg [31:0] \instrs[1] ;
  reg [31:0] \instrs[2] ;
  reg [31:0] \instrs[3] ;
  reg [31:0] \instrs[4] ;
  reg [31:0] \instrs[5] ;
  reg [31:0] \instrs[6] ;
  reg [31:0] \instrs[7] ;
  reg [31:0] \instrs[8] ;
  reg [31:0] \instrs[9] ;
  input reset;
  wire reset;
  wire [31:0] w_CPU_dmem_rd_data_a4;
  wire [4:0] w_CPU_rd_a1;
  wire [4:0] w_CPU_rs1_a1;
  wire [4:0] w_CPU_rs2_a1;
  assign _0289_ = CPU_pc_a2 + CPU_imm_a2;
  assign _0290_ = CPU_src1_value_a2 + CPU_imm_a2;
  assign _0291_ = CPU_src1_value_a3 + CPU_imm_a3;
  assign _0292_ = CPU_src1_value_a3 + CPU_src2_value_a3;
  assign _0293_ = CPU_pc_a3 + CPU_imm_a3;
  assign _0294_ = CPU_pc_a3 + 32'd4;
  assign _0295_ = CPU_pc_a3 + 32'd4;
  assign _0296_ = CPU_src1_value_a3 + CPU_imm_a3;
  assign _0297_ = CPU_pc_a1 + 32'd4;
  assign _0298_ = CPU_src1_value_a3 & CPU_src2_value_a3;
  assign _0299_ = CPU_src1_value_a3 & CPU_imm_a3;
  assign _0300_ = CPU_dec_bits_a1[9:0] == 10'h063;
  assign _0301_ = CPU_dec_bits_a1[9:0] == 10'h0e3;
  assign _0302_ = CPU_dec_bits_a1[9:0] == 10'h263;
  assign _0303_ = CPU_dec_bits_a1[9:0] == 10'h2e3;
  assign _0304_ = CPU_dec_bits_a1[9:0] == 10'h363;
  assign _0305_ = CPU_dec_bits_a1[9:0] == 10'h3e3;
  assign _0306_ = CPU_dec_bits_a1 == 11'h033;
  assign _0307_ = CPU_dec_bits_a1[9:0] == 10'h013;
  assign _0308_ = CPU_dec_bits_a1 == 11'h333;
  assign _0309_ = CPU_dec_bits_a1[9:0] == 10'h313;
  assign _0310_ = CPU_dec_bits_a1 == 11'h233;
  assign _0311_ = CPU_dec_bits_a1[9:0] == 10'h213;
  assign _0312_ = CPU_dec_bits_a1 == 11'h3b3;
  assign _0313_ = CPU_dec_bits_a1[9:0] == 10'h393;
  assign _0314_ = CPU_dec_bits_a1 == 11'h433;
  assign _0315_ = CPU_dec_bits_a1[9:0] == 10'h113;
  assign _0316_ = CPU_dec_bits_a1[9:0] == 10'h193;
  assign _0317_ = CPU_dec_bits_a1 == 11'h093;
  assign _0318_ = CPU_dec_bits_a1 == 11'h293;
  assign _0319_ = CPU_dec_bits_a1 == 11'h693;
  assign _0320_ = CPU_dec_bits_a1 == 11'h0b3;
  assign _0321_ = CPU_dec_bits_a1 == 11'h133;
  assign _0322_ = CPU_dec_bits_a1 == 11'h1b3;
  assign _0323_ = CPU_dec_bits_a1 == 11'h2b3;
  assign _0324_ = CPU_dec_bits_a1 == 11'h6b3;
  assign _0325_ = CPU_dec_bits_a1[6:0] == 7'h03;
  assign _0326_ = CPU_dec_bits_a1[9:0] == 10'h023;
  assign _0327_ = CPU_dec_bits_a1[9:0] == 10'h0a3;
  assign _0328_ = CPU_dec_bits_a1[9:0] == 10'h123;
  assign _0329_ = CPU_dec_bits_a1[6:0] == 7'h37;
  assign _0330_ = CPU_dec_bits_a1[6:0] == 7'h17;
  assign _0331_ = CPU_dec_bits_a1[6:0] == 7'h6f;
  assign _0332_ = CPU_dec_bits_a1[9:0] == 10'h067;
  assign _0333_ = CPU_rd_a3 == CPU_rs1_a2;
  assign _0334_ = CPU_rd_a3 == CPU_rs2_a2;
  assign _0335_ = CPU_src1_value_a3[31] == CPU_imm_a3[31];
  assign _0336_ = CPU_src1_value_a3[31] == CPU_src2_value_a3[31];
  assign _0337_ = CPU_src1_value_a3 == CPU_src2_value_a3;
  assign _0338_ = CPU_rf_wr_index_a3 == 32'd0;
  assign _0339_ = CPU_rf_wr_index_a3 == 32'd1;
  assign _0340_ = CPU_rf_wr_index_a3 == 32'd2;
  assign _0341_ = CPU_rf_wr_index_a3 == 32'd3;
  assign _0342_ = CPU_rf_wr_index_a3 == 32'd4;
  assign _0343_ = CPU_rf_wr_index_a3 == 32'd5;
  assign _0344_ = CPU_rf_wr_index_a3 == 32'd6;
  assign _0345_ = CPU_rf_wr_index_a3 == 32'd7;
  assign _0346_ = CPU_rf_wr_index_a3 == 32'd8;
  assign _0347_ = CPU_rf_wr_index_a3 == 32'd9;
  assign _0348_ = CPU_rf_wr_index_a3 == 32'd10;
  assign _0349_ = CPU_rf_wr_index_a3 == 32'd11;
  assign _0350_ = CPU_rf_wr_index_a3 == 32'd12;
  assign _0351_ = CPU_rf_wr_index_a3 == 32'd13;
  assign _0352_ = CPU_rf_wr_index_a3 == 32'd14;
  assign _0353_ = CPU_rf_wr_index_a3 == 32'd15;
  assign _0354_ = CPU_rf_wr_index_a3 == 32'd16;
  assign _0355_ = CPU_rf_wr_index_a3 == 32'd17;
  assign _0356_ = CPU_rf_wr_index_a3 == 32'd18;
  assign _0357_ = CPU_rf_wr_index_a3 == 32'd19;
  assign _0358_ = CPU_rf_wr_index_a3 == 32'd20;
  assign _0359_ = CPU_rf_wr_index_a3 == 32'd21;
  assign _0360_ = CPU_rf_wr_index_a3 == 32'd22;
  assign _0361_ = CPU_rf_wr_index_a3 == 32'd23;
  assign _0362_ = CPU_rf_wr_index_a3 == 32'd24;
  assign _0363_ = CPU_rf_wr_index_a3 == 32'd25;
  assign _0364_ = CPU_rf_wr_index_a3 == 32'd26;
  assign _0365_ = CPU_rf_wr_index_a3 == 32'd27;
  assign _0366_ = CPU_rf_wr_index_a3 == 32'd28;
  assign _0367_ = CPU_rf_wr_index_a3 == 32'd29;
  assign _0368_ = CPU_rf_wr_index_a3 == 32'd30;
  assign _0369_ = CPU_rf_wr_index_a3 == 32'd31;
  assign _0370_ = CPU_dmem_addr_a4 == 32'd0;
  assign _0371_ = CPU_dmem_addr_a4 == 32'd1;
  assign _0372_ = CPU_dmem_addr_a4 == 32'd2;
  assign _0373_ = CPU_dmem_addr_a4 == 32'd3;
  assign _0374_ = CPU_dmem_addr_a4 == 32'd4;
  assign _0375_ = CPU_dmem_addr_a4 == 32'd5;
  assign _0376_ = CPU_dmem_addr_a4 == 32'd6;
  assign _0377_ = CPU_dmem_addr_a4 == 32'd7;
  assign _0378_ = CPU_dmem_addr_a4 == 32'd8;
  assign _0379_ = CPU_dmem_addr_a4 == 32'd9;
  assign _0380_ = CPU_dmem_addr_a4 == 32'd10;
  assign _0381_ = CPU_dmem_addr_a4 == 32'd11;
  assign _0382_ = CPU_dmem_addr_a4 == 32'd12;
  assign _0383_ = CPU_dmem_addr_a4 == 32'd13;
  assign _0384_ = CPU_dmem_addr_a4 == 32'd14;
  assign _0385_ = CPU_dmem_addr_a4 == 32'd15;
  assign _0386_ = CPU_instr_a1[6:2] == 5'h00;
  assign _0387_ = CPU_instr_a1[6:2] == 5'h01;
  assign _0388_ = CPU_instr_a1[6:2] == 5'h04;
  assign _0389_ = CPU_instr_a1[6:2] == 5'h06;
  assign _0390_ = CPU_instr_a1[6:2] == 5'h19;
  assign _0391_ = CPU_instr_a1[6:2] == 5'h0b;
  assign _0392_ = CPU_instr_a1[6:2] == 5'h14;
  assign _0393_ = CPU_instr_a1[6:2] == 5'h0c;
  assign _0394_ = CPU_instr_a1[6:2] == 5'h0d;
  assign _0395_ = CPU_instr_a1[6:2] == 5'h18;
  assign _0396_ = CPU_instr_a1[6:2] == 5'h05;
  assign _0397_ = CPU_instr_a1[6:2] == 5'h0d;
  assign _0398_ = CPU_instr_a1[6:2] == 5'h08;
  assign _0399_ = CPU_instr_a1[6:2] == 5'h09;
  assign _0400_ = CPU_instr_a1[6:2] == 5'h1b;
  assign _0401_ = + CPU_sltiu_result_a3;
  assign _0402_ = + CPU_sltiu_result_a3;
  assign _0403_ = + CPU_sltu_result_a3;
  assign _0404_ = + CPU_sltu_result_a3;
  assign _0405_ = + 32'hxxxxxxxx;
  assign _0406_ = CPU_src1_value_a3 >= CPU_src2_value_a3;
  assign _0407_ = CPU_src1_value_a3 >= CPU_src2_value_a3;
  assign _0408_ = _0333_ && CPU_rf_wr_en_a3;
  assign _0409_ = _0334_ && CPU_rf_wr_en_a3;
  assign _0410_ = CPU_rd_valid_a3 && CPU_valid_a3;
  assign _0411_ = _0410_ && _0543_;
  assign _0412_ = CPU_valid_a3 && CPU_taken_br_a3;
  assign _0413_ = CPU_valid_a3 && CPU_is_load_a3;
  assign _0414_ = CPU_valid_a3 && CPU_is_jump_a3;
  assign _0415_ = CPU_valid_a4 && CPU_is_s_instr_a4;
  assign _0416_ = CPU_rf_wr_en_a3 && _0547_;
  assign _0417_ = _0416_ && _0338_;
  assign _0418_ = CPU_rf_wr_en_a3 && _0548_;
  assign _0419_ = _0418_ && _0339_;
  assign _0420_ = CPU_rf_wr_en_a3 && _0549_;
  assign _0421_ = _0420_ && _0340_;
  assign _0422_ = CPU_rf_wr_en_a3 && _0550_;
  assign _0423_ = _0422_ && _0341_;
  assign _0424_ = CPU_rf_wr_en_a3 && _0551_;
  assign _0425_ = _0424_ && _0342_;
  assign _0426_ = CPU_rf_wr_en_a3 && _0552_;
  assign _0427_ = _0426_ && _0343_;
  assign _0428_ = CPU_rf_wr_en_a3 && _0553_;
  assign _0429_ = _0428_ && _0344_;
  assign _0430_ = CPU_rf_wr_en_a3 && _0554_;
  assign _0431_ = _0430_ && _0345_;
  assign _0432_ = CPU_rf_wr_en_a3 && _0555_;
  assign _0433_ = _0432_ && _0346_;
  assign _0434_ = CPU_rf_wr_en_a3 && _0556_;
  assign _0435_ = _0434_ && _0347_;
  assign _0436_ = CPU_rf_wr_en_a3 && _0557_;
  assign _0437_ = _0436_ && _0348_;
  assign _0438_ = CPU_rf_wr_en_a3 && _0558_;
  assign _0439_ = _0438_ && _0349_;
  assign _0440_ = CPU_rf_wr_en_a3 && _0559_;
  assign _0441_ = _0440_ && _0350_;
  assign _0442_ = CPU_rf_wr_en_a3 && _0560_;
  assign _0443_ = _0442_ && _0351_;
  assign _0444_ = CPU_rf_wr_en_a3 && _0561_;
  assign _0445_ = _0444_ && _0352_;
  assign _0446_ = CPU_rf_wr_en_a3 && _0562_;
  assign _0447_ = _0446_ && _0353_;
  assign _0448_ = CPU_rf_wr_en_a3 && _0563_;
  assign _0449_ = _0448_ && _0354_;
  assign _0450_ = CPU_rf_wr_en_a3 && _0564_;
  assign _0451_ = _0450_ && _0355_;
  assign _0452_ = CPU_rf_wr_en_a3 && _0565_;
  assign _0453_ = _0452_ && _0356_;
  assign _0454_ = CPU_rf_wr_en_a3 && _0566_;
  assign _0455_ = _0454_ && _0357_;
  assign _0456_ = CPU_rf_wr_en_a3 && _0567_;
  assign _0457_ = _0456_ && _0358_;
  assign _0458_ = CPU_rf_wr_en_a3 && _0568_;
  assign _0459_ = _0458_ && _0359_;
  assign _0460_ = CPU_rf_wr_en_a3 && _0569_;
  assign _0461_ = _0460_ && _0360_;
  assign _0462_ = CPU_rf_wr_en_a3 && _0570_;
  assign _0463_ = _0462_ && _0361_;
  assign _0464_ = CPU_rf_wr_en_a3 && _0571_;
  assign _0465_ = _0464_ && _0362_;
  assign _0466_ = CPU_rf_wr_en_a3 && _0572_;
  assign _0467_ = _0466_ && _0363_;
  assign _0468_ = CPU_rf_wr_en_a3 && _0573_;
  assign _0469_ = _0468_ && _0364_;
  assign _0470_ = CPU_rf_wr_en_a3 && _0574_;
  assign _0471_ = _0470_ && _0365_;
  assign _0472_ = CPU_rf_wr_en_a3 && _0575_;
  assign _0473_ = _0472_ && _0366_;
  assign _0474_ = CPU_rf_wr_en_a3 && _0576_;
  assign _0475_ = _0474_ && _0367_;
  assign _0476_ = CPU_rf_wr_en_a3 && _0577_;
  assign _0477_ = _0476_ && _0368_;
  assign _0478_ = CPU_rf_wr_en_a3 && _0578_;
  assign _0479_ = _0478_ && _0369_;
  assign _0480_ = CPU_dmem_wr_en_a4 && _0370_;
  assign _0481_ = CPU_dmem_wr_en_a4 && _0371_;
  assign _0482_ = CPU_dmem_wr_en_a4 && _0372_;
  assign _0483_ = CPU_dmem_wr_en_a4 && _0373_;
  assign _0484_ = CPU_dmem_wr_en_a4 && _0374_;
  assign _0485_ = CPU_dmem_wr_en_a4 && _0375_;
  assign _0486_ = CPU_dmem_wr_en_a4 && _0376_;
  assign _0487_ = CPU_dmem_wr_en_a4 && _0377_;
  assign _0488_ = CPU_dmem_wr_en_a4 && _0378_;
  assign _0489_ = CPU_dmem_wr_en_a4 && _0379_;
  assign _0490_ = CPU_dmem_wr_en_a4 && _0380_;
  assign _0491_ = CPU_dmem_wr_en_a4 && _0381_;
  assign _0492_ = CPU_dmem_wr_en_a4 && _0382_;
  assign _0493_ = CPU_dmem_wr_en_a4 && _0383_;
  assign _0494_ = CPU_dmem_wr_en_a4 && _0384_;
  assign _0495_ = CPU_dmem_wr_en_a4 && _0385_;
  assign _0496_ = CPU_valid_jump_a3 && CPU_is_jal_a3;
  assign _0497_ = CPU_valid_jump_a3 && CPU_is_jalr_a3;
  assign _0498_ = ! CPU_valid_a3;
  assign _0499_ = ! CPU_valid_a3;
  assign _0500_ = ! _0509_;
  assign _0501_ = ! CPU_reset_a0;
  assign _0502_ = CPU_is_jal_a1 || CPU_is_jalr_a1;
  assign _0503_ = CPU_is_load_a3 || CPU_is_s_instr_a3;
  assign _0504_ = _0411_ || CPU_valid_load_a5;
  assign _0505_ = CPU_valid_taken_br_a4 || CPU_valid_taken_br_a5;
  assign _0506_ = _0505_ || CPU_valid_load_a4;
  assign _0507_ = _0506_ || CPU_valid_load_a5;
  assign _0508_ = _0507_ || CPU_valid_jump_a4;
  assign _0509_ = _0508_ || CPU_valid_jump_a5;
  assign _0510_ = _0386_ || _0387_;
  assign _0511_ = _0510_ || _0388_;
  assign _0512_ = _0511_ || _0389_;
  assign _0513_ = _0512_ || _0390_;
  assign _0514_ = _0391_ || _0392_;
  assign _0515_ = _0514_ || _0393_;
  assign _0516_ = _0515_ || _0394_;
  assign _0517_ = _0396_ || _0397_;
  assign _0518_ = _0398_ || _0399_;
  assign _0519_ = CPU_is_r_instr_a1 || CPU_is_s_instr_a1;
  assign _0520_ = _0519_ || CPU_is_b_instr_a1;
  assign _0521_ = _0520_ || CPU_is_i_instr_a1;
  assign _0522_ = CPU_is_r_instr_a1 || CPU_is_s_instr_a1;
  assign _0523_ = _0522_ || CPU_is_b_instr_a1;
  assign _0524_ = CPU_is_r_instr_a1 || CPU_is_i_instr_a1;
  assign _0525_ = _0524_ || CPU_is_u_instr_a1;
  assign _0526_ = _0525_ || CPU_is_j_instr_a1;
  assign _0527_ = CPU_is_r_instr_a1 || CPU_is_s_instr_a1;
  assign _0528_ = _0527_ || CPU_is_b_instr_a1;
  assign _0529_ = _0528_ || CPU_is_i_instr_a1;
  assign _0530_ = CPU_src1_value_a3 < CPU_src2_value_a3;
  assign _0531_ = CPU_src1_value_a3 < CPU_imm_a3;
  assign _0532_ = CPU_src1_value_a3 < CPU_src2_value_a3;
  assign _0533_ = CPU_src1_value_a3 < CPU_src2_value_a3;
  assign _0534_ = CPU_imem_rd_addr_a1 < 32'd10;
  assign _0543_ = CPU_rd_a3 != 5'h00;
  assign _0544_ = CPU_src1_value_a3 != CPU_src2_value_a3;
  assign _0545_ = CPU_src1_value_a3[31] != CPU_src2_value_a3[31];
  assign _0546_ = CPU_src1_value_a3[31] != CPU_src2_value_a3[31];
  assign _0547_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0548_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0549_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0550_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0551_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0552_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0553_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0554_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0555_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0556_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0557_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0558_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0559_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0560_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0561_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0562_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0563_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0564_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0565_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0566_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0567_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0568_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0569_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0570_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0571_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0572_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0573_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0574_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0575_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0576_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0577_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0578_ = CPU_rf_wr_index_a3 != 5'h00;
  assign _0579_ = CPU_src1_value_a3 | CPU_src2_value_a3;
  assign _0580_ = CPU_src1_value_a3 | CPU_imm_a3;
  assign _0581_ = CPU_src1_value_a3 << CPU_imm_a3[5:0];
  assign _0582_ = CPU_src1_value_a3 << CPU_src2_value_a3[4:0];
  assign _0583_ = CPU_src1_value_a3 >> CPU_imm_a3[5:0];
  assign _0584_ = { CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3 } >> CPU_imm_a3[4:0];
  assign _0585_ = CPU_src1_value_a3 >> CPU_src2_value_a3[5:0];
  assign _0586_ = { CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3[31], CPU_src1_value_a3 } >> CPU_src2_value_a3[4:0];
  assign _0587_ = CPU_src1_value_a3 - CPU_src2_value_a3;
  assign _0588_ = _0408_ ? CPU_result_a3 : CPU_rf_rd_data1_a2;
  assign _0589_ = _0409_ ? CPU_result_a3 : CPU_rf_rd_data2_a2;
  assign _0590_ = CPU_is_addi_a3 ? _0291_ : _0591_;
  assign _0591_ = CPU_is_add_a3 ? _0292_ : _0592_;
  assign _0592_ = CPU_is_or_a3 ? _0579_ : _0593_;
  assign _0593_ = CPU_is_ori_a3 ? _0580_ : _0594_;
  assign _0594_ = CPU_is_xor_a3 ? _0731_ : _0595_;
  assign _0595_ = CPU_is_xori_a3 ? _0732_ : _0596_;
  assign _0596_ = CPU_is_and_a3 ? _0298_ : _0597_;
  assign _0597_ = CPU_is_andi_a3 ? _0299_ : _0598_;
  assign _0598_ = CPU_is_sub_a3 ? _0587_ : _0600_;
  assign _0599_ = _0335_ ? _0401_ : { 63'h0000000000000000, CPU_src1_value_a3[31] };
  assign _0600_ = CPU_is_slti_a3 ? _0599_ : _0601_;
  assign _0601_ = CPU_is_sltiu_a3 ? _0402_ : _0602_;
  assign _0602_ = CPU_is_slli_a3 ? _0581_ : _0603_;
  assign _0603_ = CPU_is_srli_a3 ? _0583_ : _0604_;
  assign _0604_ = CPU_is_srai_a3 ? _0584_ : _0605_;
  assign _0605_ = CPU_is_sll_a3 ? _0582_ : _0607_;
  assign _0606_ = _0336_ ? _0403_ : { 63'h0000000000000000, CPU_src1_value_a3[31] };
  assign _0607_ = CPU_is_slt_a3 ? _0606_ : _0608_;
  assign _0608_ = CPU_is_sltu_a3 ? _0404_ : _0609_;
  assign _0609_ = CPU_is_srl_a3 ? _0585_ : _0610_;
  assign _0610_ = CPU_is_sra_a3 ? _0586_ : _0611_;
  assign _0611_ = CPU_is_lui_a3 ? { 32'h00000000, CPU_imm_a3[31:12], 12'h000 } : _0612_;
  assign _0612_ = CPU_is_auipc_a3 ? _0293_ : _0613_;
  assign _0613_ = CPU_is_jal_a3 ? _0294_ : _0614_;
  assign _0614_ = CPU_is_jalr_a3 ? _0295_ : _0615_;
  assign _0615_ = _0503_ ? _0296_ : _0405_;
  assign _0616_ = _0498_ ? CPU_rd_a5 : CPU_rd_a3;
  assign _0617_ = _0499_ ? CPU_ld_data_a5 : CPU_result_a3;
  assign _0618_ = CPU_is_beq_a3 ? _0337_ : _0619_;
  assign _0619_ = CPU_is_bne_a3 ? _0544_ : _0620_;
  assign _0620_ = CPU_is_blt_a3 ? _0733_ : _0621_;
  assign _0621_ = CPU_is_bge_a3 ? _0734_ : _0622_;
  assign _0622_ = CPU_is_bltu_a3 ? _0533_ : _0623_;
  assign _0623_ = CPU_is_bgeu_a3 ? _0407_ : 1'h0;
  assign _0624_ = _0534_ ? _0538_ : 32'd0;
  assign _0625_ = CPU_reset_a3 ? 32'd0 : _0657_;
  assign _0626_ = CPU_reset_a3 ? 32'd1 : _0658_;
  assign _0627_ = CPU_reset_a3 ? 32'd2 : _0659_;
  assign _0628_ = CPU_reset_a3 ? 32'd3 : _0660_;
  assign _0629_ = CPU_reset_a3 ? 32'd4 : _0661_;
  assign _0630_ = CPU_reset_a3 ? 32'd5 : _0662_;
  assign _0631_ = CPU_reset_a3 ? 32'd6 : _0663_;
  assign _0632_ = CPU_reset_a3 ? 32'd7 : _0664_;
  assign _0633_ = CPU_reset_a3 ? 32'd8 : _0665_;
  assign _0634_ = CPU_reset_a3 ? 32'd9 : _0666_;
  assign _0635_ = CPU_reset_a3 ? 32'd10 : _0667_;
  assign _0636_ = CPU_reset_a3 ? 32'd11 : _0668_;
  assign _0637_ = CPU_reset_a3 ? 32'd12 : _0669_;
  assign _0638_ = CPU_reset_a3 ? 32'd13 : _0670_;
  assign _0639_ = CPU_reset_a3 ? 32'd14 : _0671_;
  assign _0640_ = CPU_reset_a3 ? 32'd15 : _0672_;
  assign _0641_ = CPU_reset_a3 ? 32'd16 : _0673_;
  assign _0642_ = CPU_reset_a3 ? 32'd17 : _0674_;
  assign _0643_ = CPU_reset_a3 ? 32'd18 : _0675_;
  assign _0644_ = CPU_reset_a3 ? 32'd19 : _0676_;
  assign _0645_ = CPU_reset_a3 ? 32'd20 : _0677_;
  assign _0646_ = CPU_reset_a3 ? 32'd21 : _0678_;
  assign _0647_ = CPU_reset_a3 ? 32'd22 : _0679_;
  assign _0648_ = CPU_reset_a3 ? 32'd23 : _0680_;
  assign _0649_ = CPU_reset_a3 ? 32'd24 : _0681_;
  assign _0650_ = CPU_reset_a3 ? 32'd25 : _0682_;
  assign _0651_ = CPU_reset_a3 ? 32'd26 : _0683_;
  assign _0652_ = CPU_reset_a3 ? 32'd27 : _0684_;
  assign _0653_ = CPU_reset_a3 ? 32'd28 : _0685_;
  assign _0654_ = CPU_reset_a3 ? 32'd29 : _0686_;
  assign _0655_ = CPU_reset_a3 ? 32'd30 : _0687_;
  assign _0656_ = CPU_reset_a3 ? 32'd31 : _0688_;
  assign _0657_ = \L1_CPU_Xreg[0].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[0] ;
  assign _0658_ = \L1_CPU_Xreg[1].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[1] ;
  assign _0659_ = \L1_CPU_Xreg[2].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[2] ;
  assign _0660_ = \L1_CPU_Xreg[3].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[3] ;
  assign _0661_ = \L1_CPU_Xreg[4].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[4] ;
  assign _0662_ = \L1_CPU_Xreg[5].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[5] ;
  assign _0663_ = \L1_CPU_Xreg[6].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[6] ;
  assign _0664_ = \L1_CPU_Xreg[7].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[7] ;
  assign _0665_ = \L1_CPU_Xreg[8].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[8] ;
  assign _0666_ = \L1_CPU_Xreg[9].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[9] ;
  assign _0667_ = \L1_CPU_Xreg[10].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[10] ;
  assign _0668_ = \L1_CPU_Xreg[11].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[11] ;
  assign _0669_ = \L1_CPU_Xreg[12].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[12] ;
  assign _0670_ = \L1_CPU_Xreg[13].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[13] ;
  assign _0671_ = \L1_CPU_Xreg[14].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[14] ;
  assign _0672_ = \L1_CPU_Xreg[15].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[15] ;
  assign _0673_ = \L1_CPU_Xreg[16].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[16] ;
  assign _0674_ = \L1_CPU_Xreg[17].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[17] ;
  assign _0675_ = \L1_CPU_Xreg[18].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[18] ;
  assign _0676_ = \L1_CPU_Xreg[19].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[19] ;
  assign _0677_ = \L1_CPU_Xreg[20].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[20] ;
  assign _0678_ = \L1_CPU_Xreg[21].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[21] ;
  assign _0679_ = \L1_CPU_Xreg[22].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[22] ;
  assign _0680_ = \L1_CPU_Xreg[23].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[23] ;
  assign _0681_ = \L1_CPU_Xreg[24].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[24] ;
  assign _0682_ = \L1_CPU_Xreg[25].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[25] ;
  assign _0683_ = \L1_CPU_Xreg[26].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[26] ;
  assign _0684_ = \L1_CPU_Xreg[27].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[27] ;
  assign _0685_ = \L1_CPU_Xreg[28].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[28] ;
  assign _0686_ = \L1_CPU_Xreg[29].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[29] ;
  assign _0687_ = \L1_CPU_Xreg[30].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[30] ;
  assign _0688_ = \L1_CPU_Xreg[31].L1_wr_a3  ? CPU_rf_wr_data_a3 : \CPU_Xreg_value_a4[31] ;
  assign _0689_ = CPU_reset_a4 ? 32'd0 : _0705_;
  assign _0690_ = CPU_reset_a4 ? 32'd1 : _0706_;
  assign _0691_ = CPU_reset_a4 ? 32'd2 : _0707_;
  assign _0692_ = CPU_reset_a4 ? 32'd3 : _0708_;
  assign _0693_ = CPU_reset_a4 ? 32'd4 : _0709_;
  assign _0694_ = CPU_reset_a4 ? 32'd5 : _0710_;
  assign _0695_ = CPU_reset_a4 ? 32'd6 : _0711_;
  assign _0696_ = CPU_reset_a4 ? 32'd7 : _0712_;
  assign _0697_ = CPU_reset_a4 ? 32'd8 : _0713_;
  assign _0698_ = CPU_reset_a4 ? 32'd9 : _0714_;
  assign _0699_ = CPU_reset_a4 ? 32'd10 : _0715_;
  assign _0700_ = CPU_reset_a4 ? 32'd11 : _0716_;
  assign _0701_ = CPU_reset_a4 ? 32'd12 : _0717_;
  assign _0702_ = CPU_reset_a4 ? 32'd13 : _0718_;
  assign _0703_ = CPU_reset_a4 ? 32'd14 : _0719_;
  assign _0704_ = CPU_reset_a4 ? 32'd15 : _0720_;
  assign _0705_ = \L1_CPU_Dmem[0].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[0] ;
  assign _0706_ = \L1_CPU_Dmem[1].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[1] ;
  assign _0707_ = \L1_CPU_Dmem[2].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[2] ;
  assign _0708_ = \L1_CPU_Dmem[3].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[3] ;
  assign _0709_ = \L1_CPU_Dmem[4].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[4] ;
  assign _0710_ = \L1_CPU_Dmem[5].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[5] ;
  assign _0711_ = \L1_CPU_Dmem[6].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[6] ;
  assign _0712_ = \L1_CPU_Dmem[7].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[7] ;
  assign _0713_ = \L1_CPU_Dmem[8].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[8] ;
  assign _0714_ = \L1_CPU_Dmem[9].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[9] ;
  assign _0715_ = \L1_CPU_Dmem[10].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[10] ;
  assign _0716_ = \L1_CPU_Dmem[11].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[11] ;
  assign _0717_ = \L1_CPU_Dmem[12].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[12] ;
  assign _0718_ = \L1_CPU_Dmem[13].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[13] ;
  assign _0719_ = \L1_CPU_Dmem[14].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[14] ;
  assign _0720_ = \L1_CPU_Dmem[15].L1_wr_a4  ? CPU_dmem_wr_data_a4 : \CPU_Dmem_value_a5[15] ;
  assign _0721_ = CPU_reset_a1 ? 32'd0 : _0722_;
  assign _0722_ = CPU_valid_taken_br_a3 ? CPU_br_tgt_pc_a3 : _0723_;
  assign _0723_ = CPU_valid_load_a3 ? CPU_inc_pc_a3 : _0724_;
  assign _0724_ = _0496_ ? CPU_br_tgt_pc_a3 : _0725_;
  assign _0725_ = _0497_ ? CPU_jalr_tgt_pc_a3 : CPU_inc_pc_a1;
  assign _0726_ = CPU_is_i_instr_a1 ? { CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31:20] } : _0727_;
  assign _0727_ = CPU_is_s_instr_a1 ? { CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31:25], CPU_instr_a1[11:7] } : _0728_;
  assign _0728_ = CPU_is_b_instr_a1 ? { CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[7], CPU_instr_a1[30:25], CPU_instr_a1[11:8], 1'h0 } : _0729_;
  assign _0729_ = CPU_is_u_instr_a1 ? { CPU_instr_a1[31:12], 12'h000 } : _0730_;
  assign _0730_ = CPU_is_j_instr_a1 ? { CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[31], CPU_instr_a1[19:12], CPU_instr_a1[20], CPU_instr_a1[30:21], 1'h0 } : 32'd0;
  assign _0731_ = CPU_src1_value_a3 ^ CPU_src2_value_a3;
  assign _0732_ = CPU_src1_value_a3 ^ CPU_imm_a3;
  assign _0733_ = _0532_ ^ _0545_;
  assign _0734_ = _0406_ ^ _0546_;
  clk_gate gen_clkP_CPU_dmem_rd_en_a5 (
    clkP_CPU_dmem_rd_en_a5,
    clk,
    1'h1,
    CPU_dmem_rd_en_a4,
    1'h0
  );
  clk_gate gen_clkP_CPU_rd_valid_a2 (
    clkP_CPU_rd_valid_a2,
    clk,
    1'h1,
    CPU_rd_valid_a1,
    1'h0
  );
  clk_gate gen_clkP_CPU_rd_valid_a3 (
    clkP_CPU_rd_valid_a3,
    clk,
    1'h1,
    CPU_rd_valid_a2,
    1'h0
  );
  clk_gate gen_clkP_CPU_rd_valid_a4 (
    clkP_CPU_rd_valid_a4,
    clk,
    1'h1,
    CPU_rd_valid_a3,
    1'h0
  );
  clk_gate gen_clkP_CPU_rd_valid_a5 (
    clkP_CPU_rd_valid_a5,
    clk,
    1'h1,
    CPU_rd_valid_a4,
    1'h0
  );
  clk_gate gen_clkP_CPU_rs1_valid_a2 (
    clkP_CPU_rs1_valid_a2,
    clk,
    1'h1,
    CPU_rs1_valid_a1,
    1'h0
  );
  clk_gate gen_clkP_CPU_rs2_valid_a2 (
    clkP_CPU_rs2_valid_a2,
    clk,
    1'h1,
    CPU_rs2_valid_a1,
    1'h0
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0274_ = \CPU_Xreg_value_a5[15] [9:0];
  end
  always @(posedge CLK) begin
      OUT <= _0274_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0275_ = 32'd1331;
    _0276_ = 32'd329523;
    _0277_ = 32'd10814995;
    _0278_ = 32'd329395;
    _0279_ = 32'd15107891;
    _0280_ = 32'd1476243;
    _0281_ = 32'd4274441443;
    _0282_ = 32'd460083;
    _0283_ = 32'd10494499;
    _0284_ = 32'd4204419;
    _0036_ = 32'd1331;
    _0037_ = 32'd329523;
    _0038_ = 32'd10814995;
    _0039_ = 32'd329395;
    _0040_ = 32'd15107891;
    _0041_ = 32'd1476243;
    _0042_ = 32'd4274441443;
    _0043_ = 32'd460083;
    _0044_ = 32'd10494499;
    _0045_ = 32'd4204419;
    _0046_ = _0625_;
    _0057_ = _0626_;
    _0068_ = _0627_;
    _0071_ = _0628_;
    _0072_ = _0629_;
    _0073_ = _0630_;
    _0074_ = _0631_;
    _0075_ = _0632_;
    _0076_ = _0633_;
    _0077_ = _0634_;
    _0047_ = _0635_;
    _0048_ = _0636_;
    _0049_ = _0637_;
    _0050_ = _0638_;
    _0051_ = _0639_;
    _0052_ = _0640_;
    _0053_ = _0641_;
    _0054_ = _0642_;
    _0055_ = _0643_;
    _0056_ = _0644_;
    _0058_ = _0645_;
    _0059_ = _0646_;
    _0060_ = _0647_;
    _0061_ = _0648_;
    _0062_ = _0649_;
    _0063_ = _0650_;
    _0064_ = _0651_;
    _0065_ = _0652_;
    _0066_ = _0653_;
    _0067_ = _0654_;
    _0069_ = _0655_;
    _0070_ = _0656_;
    _0004_ = _0689_;
    _0011_ = _0690_;
    _0012_ = _0691_;
    _0013_ = _0692_;
    _0014_ = _0693_;
    _0015_ = _0694_;
    _0016_ = _0695_;
    _0017_ = _0696_;
    _0018_ = _0697_;
    _0019_ = _0698_;
    _0005_ = _0699_;
    _0006_ = _0700_;
    _0007_ = _0701_;
    _0008_ = _0702_;
    _0009_ = _0703_;
    _0010_ = _0704_;
  end
  always @* begin
      \CPU_Dmem_value_a4[0]  <= _0004_;
      \CPU_Dmem_value_a4[1]  <= _0011_;
      \CPU_Dmem_value_a4[2]  <= _0012_;
      \CPU_Dmem_value_a4[3]  <= _0013_;
      \CPU_Dmem_value_a4[4]  <= _0014_;
      \CPU_Dmem_value_a4[5]  <= _0015_;
      \CPU_Dmem_value_a4[6]  <= _0016_;
      \CPU_Dmem_value_a4[7]  <= _0017_;
      \CPU_Dmem_value_a4[8]  <= _0018_;
      \CPU_Dmem_value_a4[9]  <= _0019_;
      \CPU_Dmem_value_a4[10]  <= _0005_;
      \CPU_Dmem_value_a4[11]  <= _0006_;
      \CPU_Dmem_value_a4[12]  <= _0007_;
      \CPU_Dmem_value_a4[13]  <= _0008_;
      \CPU_Dmem_value_a4[14]  <= _0009_;
      \CPU_Dmem_value_a4[15]  <= _0010_;
      \CPU_Imem_instr_a1[0]  <= _0036_;
      \CPU_Imem_instr_a1[1]  <= _0037_;
      \CPU_Imem_instr_a1[2]  <= _0038_;
      \CPU_Imem_instr_a1[3]  <= _0039_;
      \CPU_Imem_instr_a1[4]  <= _0040_;
      \CPU_Imem_instr_a1[5]  <= _0041_;
      \CPU_Imem_instr_a1[6]  <= _0042_;
      \CPU_Imem_instr_a1[7]  <= _0043_;
      \CPU_Imem_instr_a1[8]  <= _0044_;
      \CPU_Imem_instr_a1[9]  <= _0045_;
      \CPU_Xreg_value_a3[0]  <= _0046_;
      \CPU_Xreg_value_a3[1]  <= _0057_;
      \CPU_Xreg_value_a3[2]  <= _0068_;
      \CPU_Xreg_value_a3[3]  <= _0071_;
      \CPU_Xreg_value_a3[4]  <= _0072_;
      \CPU_Xreg_value_a3[5]  <= _0073_;
      \CPU_Xreg_value_a3[6]  <= _0074_;
      \CPU_Xreg_value_a3[7]  <= _0075_;
      \CPU_Xreg_value_a3[8]  <= _0076_;
      \CPU_Xreg_value_a3[9]  <= _0077_;
      \CPU_Xreg_value_a3[10]  <= _0047_;
      \CPU_Xreg_value_a3[11]  <= _0048_;
      \CPU_Xreg_value_a3[12]  <= _0049_;
      \CPU_Xreg_value_a3[13]  <= _0050_;
      \CPU_Xreg_value_a3[14]  <= _0051_;
      \CPU_Xreg_value_a3[15]  <= _0052_;
      \CPU_Xreg_value_a3[16]  <= _0053_;
      \CPU_Xreg_value_a3[17]  <= _0054_;
      \CPU_Xreg_value_a3[18]  <= _0055_;
      \CPU_Xreg_value_a3[19]  <= _0056_;
      \CPU_Xreg_value_a3[20]  <= _0058_;
      \CPU_Xreg_value_a3[21]  <= _0059_;
      \CPU_Xreg_value_a3[22]  <= _0060_;
      \CPU_Xreg_value_a3[23]  <= _0061_;
      \CPU_Xreg_value_a3[24]  <= _0062_;
      \CPU_Xreg_value_a3[25]  <= _0063_;
      \CPU_Xreg_value_a3[26]  <= _0064_;
      \CPU_Xreg_value_a3[27]  <= _0065_;
      \CPU_Xreg_value_a3[28]  <= _0066_;
      \CPU_Xreg_value_a3[29]  <= _0067_;
      \CPU_Xreg_value_a3[30]  <= _0069_;
      \CPU_Xreg_value_a3[31]  <= _0070_;
      \instrs[0]  <= _0275_;
      \instrs[1]  <= _0276_;
      \instrs[2]  <= _0277_;
      \instrs[3]  <= _0278_;
      \instrs[4]  <= _0279_;
      \instrs[5]  <= _0280_;
      \instrs[6]  <= _0281_;
      \instrs[7]  <= _0282_;
      \instrs[8]  <= _0283_;
      \instrs[9]  <= _0284_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0001_ = _0286_;
    casez (_0537_)
      4'h0:
          _0286_ = \CPU_Imem_instr_a1[0] ;
      4'h1:
          _0286_ = \CPU_Imem_instr_a1[1] ;
      4'h2:
          _0286_ = \CPU_Imem_instr_a1[2] ;
      4'h3:
          _0286_ = \CPU_Imem_instr_a1[3] ;
      4'h4:
          _0286_ = \CPU_Imem_instr_a1[4] ;
      4'h5:
          _0286_ = \CPU_Imem_instr_a1[5] ;
      4'h6:
          _0286_ = \CPU_Imem_instr_a1[6] ;
      4'h7:
          _0286_ = \CPU_Imem_instr_a1[7] ;
      4'h8:
          _0286_ = \CPU_Imem_instr_a1[8] ;
      4'h9:
          _0286_ = \CPU_Imem_instr_a1[9] ;
      default:
          _0286_ = 32'hxxxxxxxx;
    endcase
  end
  always @* begin
      _0538_ <= _0001_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0002_ = _0287_;
    casez (_0539_)
      5'h00:
          _0287_ = \CPU_Xreg_value_a4[0] ;
      5'h01:
          _0287_ = \CPU_Xreg_value_a4[1] ;
      5'h02:
          _0287_ = \CPU_Xreg_value_a4[2] ;
      5'h03:
          _0287_ = \CPU_Xreg_value_a4[3] ;
      5'h04:
          _0287_ = \CPU_Xreg_value_a4[4] ;
      5'h05:
          _0287_ = \CPU_Xreg_value_a4[5] ;
      5'h06:
          _0287_ = \CPU_Xreg_value_a4[6] ;
      5'h07:
          _0287_ = \CPU_Xreg_value_a4[7] ;
      5'h08:
          _0287_ = \CPU_Xreg_value_a4[8] ;
      5'h09:
          _0287_ = \CPU_Xreg_value_a4[9] ;
      5'h0a:
          _0287_ = \CPU_Xreg_value_a4[10] ;
      5'h0b:
          _0287_ = \CPU_Xreg_value_a4[11] ;
      5'h0c:
          _0287_ = \CPU_Xreg_value_a4[12] ;
      5'h0d:
          _0287_ = \CPU_Xreg_value_a4[13] ;
      5'h0e:
          _0287_ = \CPU_Xreg_value_a4[14] ;
      5'h0f:
          _0287_ = \CPU_Xreg_value_a4[15] ;
      5'h10:
          _0287_ = \CPU_Xreg_value_a4[16] ;
      5'h11:
          _0287_ = \CPU_Xreg_value_a4[17] ;
      5'h12:
          _0287_ = \CPU_Xreg_value_a4[18] ;
      5'h13:
          _0287_ = \CPU_Xreg_value_a4[19] ;
      5'h14:
          _0287_ = \CPU_Xreg_value_a4[20] ;
      5'h15:
          _0287_ = \CPU_Xreg_value_a4[21] ;
      5'h16:
          _0287_ = \CPU_Xreg_value_a4[22] ;
      5'h17:
          _0287_ = \CPU_Xreg_value_a4[23] ;
      5'h18:
          _0287_ = \CPU_Xreg_value_a4[24] ;
      5'h19:
          _0287_ = \CPU_Xreg_value_a4[25] ;
      5'h1a:
          _0287_ = \CPU_Xreg_value_a4[26] ;
      5'h1b:
          _0287_ = \CPU_Xreg_value_a4[27] ;
      5'h1c:
          _0287_ = \CPU_Xreg_value_a4[28] ;
      5'h1d:
          _0287_ = \CPU_Xreg_value_a4[29] ;
      5'h1e:
          _0287_ = \CPU_Xreg_value_a4[30] ;
      5'h1f:
          _0287_ = \CPU_Xreg_value_a4[31] ;
      default:
          _0287_ = 32'hxxxxxxxx;
    endcase
  end
  always @* begin
      _0540_ <= _0002_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0003_ = _0288_;
    casez (_0541_)
      5'h00:
          _0288_ = \CPU_Xreg_value_a4[0] ;
      5'h01:
          _0288_ = \CPU_Xreg_value_a4[1] ;
      5'h02:
          _0288_ = \CPU_Xreg_value_a4[2] ;
      5'h03:
          _0288_ = \CPU_Xreg_value_a4[3] ;
      5'h04:
          _0288_ = \CPU_Xreg_value_a4[4] ;
      5'h05:
          _0288_ = \CPU_Xreg_value_a4[5] ;
      5'h06:
          _0288_ = \CPU_Xreg_value_a4[6] ;
      5'h07:
          _0288_ = \CPU_Xreg_value_a4[7] ;
      5'h08:
          _0288_ = \CPU_Xreg_value_a4[8] ;
      5'h09:
          _0288_ = \CPU_Xreg_value_a4[9] ;
      5'h0a:
          _0288_ = \CPU_Xreg_value_a4[10] ;
      5'h0b:
          _0288_ = \CPU_Xreg_value_a4[11] ;
      5'h0c:
          _0288_ = \CPU_Xreg_value_a4[12] ;
      5'h0d:
          _0288_ = \CPU_Xreg_value_a4[13] ;
      5'h0e:
          _0288_ = \CPU_Xreg_value_a4[14] ;
      5'h0f:
          _0288_ = \CPU_Xreg_value_a4[15] ;
      5'h10:
          _0288_ = \CPU_Xreg_value_a4[16] ;
      5'h11:
          _0288_ = \CPU_Xreg_value_a4[17] ;
      5'h12:
          _0288_ = \CPU_Xreg_value_a4[18] ;
      5'h13:
          _0288_ = \CPU_Xreg_value_a4[19] ;
      5'h14:
          _0288_ = \CPU_Xreg_value_a4[20] ;
      5'h15:
          _0288_ = \CPU_Xreg_value_a4[21] ;
      5'h16:
          _0288_ = \CPU_Xreg_value_a4[22] ;
      5'h17:
          _0288_ = \CPU_Xreg_value_a4[23] ;
      5'h18:
          _0288_ = \CPU_Xreg_value_a4[24] ;
      5'h19:
          _0288_ = \CPU_Xreg_value_a4[25] ;
      5'h1a:
          _0288_ = \CPU_Xreg_value_a4[26] ;
      5'h1b:
          _0288_ = \CPU_Xreg_value_a4[27] ;
      5'h1c:
          _0288_ = \CPU_Xreg_value_a4[28] ;
      5'h1d:
          _0288_ = \CPU_Xreg_value_a4[29] ;
      5'h1e:
          _0288_ = \CPU_Xreg_value_a4[30] ;
      5'h1f:
          _0288_ = \CPU_Xreg_value_a4[31] ;
      default:
          _0288_ = 32'hxxxxxxxx;
    endcase
  end
  always @* begin
      _0542_ <= _0003_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0000_ = _0285_;
    casez (_0535_)
      4'h0:
          _0285_ = \CPU_Dmem_value_a5[0] ;
      4'h1:
          _0285_ = \CPU_Dmem_value_a5[1] ;
      4'h2:
          _0285_ = \CPU_Dmem_value_a5[2] ;
      4'h3:
          _0285_ = \CPU_Dmem_value_a5[3] ;
      4'h4:
          _0285_ = \CPU_Dmem_value_a5[4] ;
      4'h5:
          _0285_ = \CPU_Dmem_value_a5[5] ;
      4'h6:
          _0285_ = \CPU_Dmem_value_a5[6] ;
      4'h7:
          _0285_ = \CPU_Dmem_value_a5[7] ;
      4'h8:
          _0285_ = \CPU_Dmem_value_a5[8] ;
      4'h9:
          _0285_ = \CPU_Dmem_value_a5[9] ;
      4'ha:
          _0285_ = \CPU_Dmem_value_a5[10] ;
      4'hb:
          _0285_ = \CPU_Dmem_value_a5[11] ;
      4'hc:
          _0285_ = \CPU_Dmem_value_a5[12] ;
      4'hd:
          _0285_ = \CPU_Dmem_value_a5[13] ;
      4'he:
          _0285_ = \CPU_Dmem_value_a5[14] ;
      4'hf:
          _0285_ = \CPU_Dmem_value_a5[15] ;
      default:
          _0285_ = 32'hxxxxxxxx;
    endcase
  end
  always @* begin
      _0536_ <= _0000_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0142_ = CPU_br_tgt_pc_a2;
  end
  always @(posedge clk) begin
      CPU_br_tgt_pc_a3 <= _0142_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0143_ = CPU_clk_chandan_a0;
  end
  always @(posedge clk) begin
      CPU_clk_chandan_a1 <= _0143_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0144_ = CPU_clk_chandan_a1;
  end
  always @(posedge clk) begin
      CPU_clk_chandan_a2 <= _0144_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0145_ = CPU_clk_chandan_a2;
  end
  always @(posedge clk) begin
      CPU_clk_chandan_a3 <= _0145_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0146_ = CPU_clk_chandan_a3;
  end
  always @(posedge clk) begin
      CPU_clk_chandan_a4 <= _0146_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0147_ = CPU_clk_chandan_a4;
  end
  always @(posedge clk) begin
      CPU_clk_chandan_a5 <= _0147_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0148_ = w_CPU_dmem_rd_data_a4;
  end
  always @(posedge clkP_CPU_dmem_rd_en_a5) begin
      CPU_dmem_rd_data_a5 <= _0148_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0149_ = CPU_imem_rd_addr_a0;
  end
  always @(posedge clk) begin
      CPU_imem_rd_addr_a1 <= _0149_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0150_ = CPU_imem_rd_en_a0;
  end
  always @(posedge clk) begin
      CPU_imem_rd_en_a1 <= _0150_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0151_ = CPU_imm_a1;
  end
  always @(posedge clk) begin
      CPU_imm_a2 <= _0151_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0152_ = CPU_imm_a2;
  end
  always @(posedge clk) begin
      CPU_imm_a3 <= _0152_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0153_ = CPU_inc_pc_a1;
  end
  always @(posedge clk) begin
      CPU_inc_pc_a2 <= _0153_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0154_ = CPU_inc_pc_a2;
  end
  always @(posedge clk) begin
      CPU_inc_pc_a3 <= _0154_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0155_ = CPU_is_add_a1;
  end
  always @(posedge clk) begin
      CPU_is_add_a2 <= _0155_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0156_ = CPU_is_add_a2;
  end
  always @(posedge clk) begin
      CPU_is_add_a3 <= _0156_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0157_ = CPU_is_addi_a1;
  end
  always @(posedge clk) begin
      CPU_is_addi_a2 <= _0157_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0158_ = CPU_is_addi_a2;
  end
  always @(posedge clk) begin
      CPU_is_addi_a3 <= _0158_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0159_ = CPU_is_and_a1;
  end
  always @(posedge clk) begin
      CPU_is_and_a2 <= _0159_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0160_ = CPU_is_and_a2;
  end
  always @(posedge clk) begin
      CPU_is_and_a3 <= _0160_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0161_ = CPU_is_andi_a1;
  end
  always @(posedge clk) begin
      CPU_is_andi_a2 <= _0161_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0162_ = CPU_is_andi_a2;
  end
  always @(posedge clk) begin
      CPU_is_andi_a3 <= _0162_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0163_ = CPU_is_auipc_a1;
  end
  always @(posedge clk) begin
      CPU_is_auipc_a2 <= _0163_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0164_ = CPU_is_auipc_a2;
  end
  always @(posedge clk) begin
      CPU_is_auipc_a3 <= _0164_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0165_ = CPU_is_beq_a1;
  end
  always @(posedge clk) begin
      CPU_is_beq_a2 <= _0165_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0166_ = CPU_is_beq_a2;
  end
  always @(posedge clk) begin
      CPU_is_beq_a3 <= _0166_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0167_ = CPU_is_beq_a3;
  end
  always @(posedge clk) begin
      CPU_is_beq_a4 <= _0167_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0168_ = CPU_is_beq_a4;
  end
  always @(posedge clk) begin
      CPU_is_beq_a5 <= _0168_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0169_ = CPU_is_bge_a1;
  end
  always @(posedge clk) begin
      CPU_is_bge_a2 <= _0169_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0170_ = CPU_is_bge_a2;
  end
  always @(posedge clk) begin
      CPU_is_bge_a3 <= _0170_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0171_ = CPU_is_bge_a3;
  end
  always @(posedge clk) begin
      CPU_is_bge_a4 <= _0171_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0172_ = CPU_is_bge_a4;
  end
  always @(posedge clk) begin
      CPU_is_bge_a5 <= _0172_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0173_ = CPU_is_bgeu_a1;
  end
  always @(posedge clk) begin
      CPU_is_bgeu_a2 <= _0173_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0174_ = CPU_is_bgeu_a2;
  end
  always @(posedge clk) begin
      CPU_is_bgeu_a3 <= _0174_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0175_ = CPU_is_bgeu_a3;
  end
  always @(posedge clk) begin
      CPU_is_bgeu_a4 <= _0175_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0176_ = CPU_is_bgeu_a4;
  end
  always @(posedge clk) begin
      CPU_is_bgeu_a5 <= _0176_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0177_ = CPU_is_blt_a1;
  end
  always @(posedge clk) begin
      CPU_is_blt_a2 <= _0177_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0178_ = CPU_is_blt_a2;
  end
  always @(posedge clk) begin
      CPU_is_blt_a3 <= _0178_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0179_ = CPU_is_blt_a3;
  end
  always @(posedge clk) begin
      CPU_is_blt_a4 <= _0179_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0180_ = CPU_is_blt_a4;
  end
  always @(posedge clk) begin
      CPU_is_blt_a5 <= _0180_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0181_ = CPU_is_bltu_a1;
  end
  always @(posedge clk) begin
      CPU_is_bltu_a2 <= _0181_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0182_ = CPU_is_bltu_a2;
  end
  always @(posedge clk) begin
      CPU_is_bltu_a3 <= _0182_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0183_ = CPU_is_bltu_a3;
  end
  always @(posedge clk) begin
      CPU_is_bltu_a4 <= _0183_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0184_ = CPU_is_bltu_a4;
  end
  always @(posedge clk) begin
      CPU_is_bltu_a5 <= _0184_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0185_ = CPU_is_bne_a1;
  end
  always @(posedge clk) begin
      CPU_is_bne_a2 <= _0185_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0186_ = CPU_is_bne_a2;
  end
  always @(posedge clk) begin
      CPU_is_bne_a3 <= _0186_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0187_ = CPU_is_bne_a3;
  end
  always @(posedge clk) begin
      CPU_is_bne_a4 <= _0187_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0188_ = CPU_is_bne_a4;
  end
  always @(posedge clk) begin
      CPU_is_bne_a5 <= _0188_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0189_ = CPU_is_jal_a1;
  end
  always @(posedge clk) begin
      CPU_is_jal_a2 <= _0189_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0190_ = CPU_is_jal_a2;
  end
  always @(posedge clk) begin
      CPU_is_jal_a3 <= _0190_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0191_ = CPU_is_jalr_a1;
  end
  always @(posedge clk) begin
      CPU_is_jalr_a2 <= _0191_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0192_ = CPU_is_jalr_a2;
  end
  always @(posedge clk) begin
      CPU_is_jalr_a3 <= _0192_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0193_ = CPU_is_jump_a1;
  end
  always @(posedge clk) begin
      CPU_is_jump_a2 <= _0193_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0194_ = CPU_is_jump_a2;
  end
  always @(posedge clk) begin
      CPU_is_jump_a3 <= _0194_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0195_ = CPU_is_load_a1;
  end
  always @(posedge clk) begin
      CPU_is_load_a2 <= _0195_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0196_ = CPU_is_load_a2;
  end
  always @(posedge clk) begin
      CPU_is_load_a3 <= _0196_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0197_ = CPU_is_lui_a1;
  end
  always @(posedge clk) begin
      CPU_is_lui_a2 <= _0197_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0198_ = CPU_is_lui_a2;
  end
  always @(posedge clk) begin
      CPU_is_lui_a3 <= _0198_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0199_ = CPU_is_or_a1;
  end
  always @(posedge clk) begin
      CPU_is_or_a2 <= _0199_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0200_ = CPU_is_or_a2;
  end
  always @(posedge clk) begin
      CPU_is_or_a3 <= _0200_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0201_ = CPU_is_ori_a1;
  end
  always @(posedge clk) begin
      CPU_is_ori_a2 <= _0201_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0202_ = CPU_is_ori_a2;
  end
  always @(posedge clk) begin
      CPU_is_ori_a3 <= _0202_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0203_ = CPU_is_s_instr_a1;
  end
  always @(posedge clk) begin
      CPU_is_s_instr_a2 <= _0203_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0204_ = CPU_is_s_instr_a2;
  end
  always @(posedge clk) begin
      CPU_is_s_instr_a3 <= _0204_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0205_ = CPU_is_s_instr_a3;
  end
  always @(posedge clk) begin
      CPU_is_s_instr_a4 <= _0205_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0206_ = CPU_is_sb_a1;
  end
  always @(posedge clk) begin
      CPU_is_sb_a2 <= _0206_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0207_ = CPU_is_sb_a2;
  end
  always @(posedge clk) begin
      CPU_is_sb_a3 <= _0207_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0208_ = CPU_is_sb_a3;
  end
  always @(posedge clk) begin
      CPU_is_sb_a4 <= _0208_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0209_ = CPU_is_sb_a4;
  end
  always @(posedge clk) begin
      CPU_is_sb_a5 <= _0209_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0210_ = CPU_is_sh_a1;
  end
  always @(posedge clk) begin
      CPU_is_sh_a2 <= _0210_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0211_ = CPU_is_sh_a2;
  end
  always @(posedge clk) begin
      CPU_is_sh_a3 <= _0211_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0212_ = CPU_is_sh_a3;
  end
  always @(posedge clk) begin
      CPU_is_sh_a4 <= _0212_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0213_ = CPU_is_sh_a4;
  end
  always @(posedge clk) begin
      CPU_is_sh_a5 <= _0213_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0214_ = CPU_is_sll_a1;
  end
  always @(posedge clk) begin
      CPU_is_sll_a2 <= _0214_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0215_ = CPU_is_sll_a2;
  end
  always @(posedge clk) begin
      CPU_is_sll_a3 <= _0215_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0216_ = CPU_is_slli_a1;
  end
  always @(posedge clk) begin
      CPU_is_slli_a2 <= _0216_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0217_ = CPU_is_slli_a2;
  end
  always @(posedge clk) begin
      CPU_is_slli_a3 <= _0217_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0218_ = CPU_is_slt_a1;
  end
  always @(posedge clk) begin
      CPU_is_slt_a2 <= _0218_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0219_ = CPU_is_slt_a2;
  end
  always @(posedge clk) begin
      CPU_is_slt_a3 <= _0219_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0220_ = CPU_is_slti_a1;
  end
  always @(posedge clk) begin
      CPU_is_slti_a2 <= _0220_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0221_ = CPU_is_slti_a2;
  end
  always @(posedge clk) begin
      CPU_is_slti_a3 <= _0221_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0222_ = CPU_is_sltiu_a1;
  end
  always @(posedge clk) begin
      CPU_is_sltiu_a2 <= _0222_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0223_ = CPU_is_sltiu_a2;
  end
  always @(posedge clk) begin
      CPU_is_sltiu_a3 <= _0223_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0224_ = CPU_is_sltu_a1;
  end
  always @(posedge clk) begin
      CPU_is_sltu_a2 <= _0224_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0225_ = CPU_is_sltu_a2;
  end
  always @(posedge clk) begin
      CPU_is_sltu_a3 <= _0225_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0226_ = CPU_is_sra_a1;
  end
  always @(posedge clk) begin
      CPU_is_sra_a2 <= _0226_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0227_ = CPU_is_sra_a2;
  end
  always @(posedge clk) begin
      CPU_is_sra_a3 <= _0227_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0228_ = CPU_is_srai_a1;
  end
  always @(posedge clk) begin
      CPU_is_srai_a2 <= _0228_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0229_ = CPU_is_srai_a2;
  end
  always @(posedge clk) begin
      CPU_is_srai_a3 <= _0229_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0230_ = CPU_is_srl_a1;
  end
  always @(posedge clk) begin
      CPU_is_srl_a2 <= _0230_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0231_ = CPU_is_srl_a2;
  end
  always @(posedge clk) begin
      CPU_is_srl_a3 <= _0231_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0232_ = CPU_is_srli_a1;
  end
  always @(posedge clk) begin
      CPU_is_srli_a2 <= _0232_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0233_ = CPU_is_srli_a2;
  end
  always @(posedge clk) begin
      CPU_is_srli_a3 <= _0233_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0234_ = CPU_is_sub_a1;
  end
  always @(posedge clk) begin
      CPU_is_sub_a2 <= _0234_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0235_ = CPU_is_sub_a2;
  end
  always @(posedge clk) begin
      CPU_is_sub_a3 <= _0235_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0236_ = CPU_is_sw_a1;
  end
  always @(posedge clk) begin
      CPU_is_sw_a2 <= _0236_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0237_ = CPU_is_sw_a2;
  end
  always @(posedge clk) begin
      CPU_is_sw_a3 <= _0237_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0238_ = CPU_is_sw_a3;
  end
  always @(posedge clk) begin
      CPU_is_sw_a4 <= _0238_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0239_ = CPU_is_sw_a4;
  end
  always @(posedge clk) begin
      CPU_is_sw_a5 <= _0239_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0240_ = CPU_is_xor_a1;
  end
  always @(posedge clk) begin
      CPU_is_xor_a2 <= _0240_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0241_ = CPU_is_xor_a2;
  end
  always @(posedge clk) begin
      CPU_is_xor_a3 <= _0241_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0242_ = CPU_is_xori_a1;
  end
  always @(posedge clk) begin
      CPU_is_xori_a2 <= _0242_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0243_ = CPU_is_xori_a2;
  end
  always @(posedge clk) begin
      CPU_is_xori_a3 <= _0243_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0244_ = CPU_jalr_tgt_pc_a2;
  end
  always @(posedge clk) begin
      CPU_jalr_tgt_pc_a3 <= _0244_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0245_ = CPU_pc_a0;
  end
  always @(posedge clk) begin
      CPU_pc_a1 <= _0245_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0246_ = CPU_pc_a1;
  end
  always @(posedge clk) begin
      CPU_pc_a2 <= _0246_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0247_ = CPU_pc_a2;
  end
  always @(posedge clk) begin
      CPU_pc_a3 <= _0247_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0248_ = w_CPU_rd_a1;
  end
  always @(posedge clkP_CPU_rd_valid_a2) begin
      CPU_rd_a2 <= _0248_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0249_ = CPU_rd_a2;
  end
  always @(posedge clkP_CPU_rd_valid_a3) begin
      CPU_rd_a3 <= _0249_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0250_ = CPU_rd_a3;
  end
  always @(posedge clkP_CPU_rd_valid_a4) begin
      CPU_rd_a4 <= _0250_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0251_ = CPU_rd_a4;
  end
  always @(posedge clkP_CPU_rd_valid_a5) begin
      CPU_rd_a5 <= _0251_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0252_ = CPU_rd_valid_a1;
  end
  always @(posedge clk) begin
      CPU_rd_valid_a2 <= _0252_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0253_ = CPU_rd_valid_a2;
  end
  always @(posedge clk) begin
      CPU_rd_valid_a3 <= _0253_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0254_ = CPU_rd_valid_a3;
  end
  always @(posedge clk) begin
      CPU_rd_valid_a4 <= _0254_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0255_ = CPU_reset_a0;
  end
  always @(posedge clk) begin
      CPU_reset_a1 <= _0255_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0256_ = CPU_reset_a1;
  end
  always @(posedge clk) begin
      CPU_reset_a2 <= _0256_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0257_ = CPU_reset_a2;
  end
  always @(posedge clk) begin
      CPU_reset_a3 <= _0257_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0258_ = CPU_reset_a3;
  end
  always @(posedge clk) begin
      CPU_reset_a4 <= _0258_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0259_ = CPU_result_a3[5:2];
  end
  always @(posedge clk) begin
      CPU_result_a4 <= _0259_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0260_ = w_CPU_rs1_a1;
  end
  always @(posedge clkP_CPU_rs1_valid_a2) begin
      CPU_rs1_a2 <= _0260_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0261_ = CPU_rs1_valid_a1;
  end
  always @(posedge clk) begin
      CPU_rs1_valid_a2 <= _0261_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0262_ = w_CPU_rs2_a1;
  end
  always @(posedge clkP_CPU_rs2_valid_a2) begin
      CPU_rs2_a2 <= _0262_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0263_ = CPU_rs2_valid_a1;
  end
  always @(posedge clk) begin
      CPU_rs2_valid_a2 <= _0263_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0264_ = CPU_src1_value_a2;
  end
  always @(posedge clk) begin
      CPU_src1_value_a3 <= _0264_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0265_ = CPU_src2_value_a2;
  end
  always @(posedge clk) begin
      CPU_src2_value_a3 <= _0265_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0266_ = CPU_src2_value_a3;
  end
  always @(posedge clk) begin
      CPU_src2_value_a4 <= _0266_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0267_ = CPU_valid_a3;
  end
  always @(posedge clk) begin
      CPU_valid_a4 <= _0267_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0268_ = CPU_valid_jump_a3;
  end
  always @(posedge clk) begin
      CPU_valid_jump_a4 <= _0268_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0269_ = CPU_valid_jump_a4;
  end
  always @(posedge clk) begin
      CPU_valid_jump_a5 <= _0269_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0270_ = CPU_valid_load_a3;
  end
  always @(posedge clk) begin
      CPU_valid_load_a4 <= _0270_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0271_ = CPU_valid_load_a4;
  end
  always @(posedge clk) begin
      CPU_valid_load_a5 <= _0271_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0272_ = CPU_valid_taken_br_a3;
  end
  always @(posedge clk) begin
      CPU_valid_taken_br_a4 <= _0272_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0273_ = CPU_valid_taken_br_a4;
  end
  always @(posedge clk) begin
      CPU_valid_taken_br_a5 <= _0273_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0020_ = \CPU_Dmem_value_a4[0] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[0]  <= _0020_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0027_ = \CPU_Dmem_value_a4[1] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[1]  <= _0027_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0028_ = \CPU_Dmem_value_a4[2] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[2]  <= _0028_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0029_ = \CPU_Dmem_value_a4[3] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[3]  <= _0029_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0030_ = \CPU_Dmem_value_a4[4] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[4]  <= _0030_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0031_ = \CPU_Dmem_value_a4[5] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[5]  <= _0031_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0032_ = \CPU_Dmem_value_a4[6] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[6]  <= _0032_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0033_ = \CPU_Dmem_value_a4[7] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[7]  <= _0033_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0034_ = \CPU_Dmem_value_a4[8] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[8]  <= _0034_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0035_ = \CPU_Dmem_value_a4[9] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[9]  <= _0035_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0021_ = \CPU_Dmem_value_a4[10] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[10]  <= _0021_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0022_ = \CPU_Dmem_value_a4[11] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[11]  <= _0022_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0023_ = \CPU_Dmem_value_a4[12] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[12]  <= _0023_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0024_ = \CPU_Dmem_value_a4[13] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[13]  <= _0024_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0025_ = \CPU_Dmem_value_a4[14] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[14]  <= _0025_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0026_ = \CPU_Dmem_value_a4[15] ;
  end
  always @(posedge clk) begin
      \CPU_Dmem_value_a5[15]  <= _0026_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0078_ = \CPU_Xreg_value_a3[0] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[0]  <= _0078_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0089_ = \CPU_Xreg_value_a3[1] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[1]  <= _0089_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0100_ = \CPU_Xreg_value_a3[2] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[2]  <= _0100_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0103_ = \CPU_Xreg_value_a3[3] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[3]  <= _0103_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0104_ = \CPU_Xreg_value_a3[4] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[4]  <= _0104_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0105_ = \CPU_Xreg_value_a3[5] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[5]  <= _0105_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0106_ = \CPU_Xreg_value_a3[6] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[6]  <= _0106_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0107_ = \CPU_Xreg_value_a3[7] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[7]  <= _0107_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0108_ = \CPU_Xreg_value_a3[8] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[8]  <= _0108_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0109_ = \CPU_Xreg_value_a3[9] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[9]  <= _0109_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0079_ = \CPU_Xreg_value_a3[10] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[10]  <= _0079_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0080_ = \CPU_Xreg_value_a3[11] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[11]  <= _0080_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0081_ = \CPU_Xreg_value_a3[12] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[12]  <= _0081_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0082_ = \CPU_Xreg_value_a3[13] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[13]  <= _0082_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0083_ = \CPU_Xreg_value_a3[14] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[14]  <= _0083_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0084_ = \CPU_Xreg_value_a3[15] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[15]  <= _0084_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0085_ = \CPU_Xreg_value_a3[16] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[16]  <= _0085_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0086_ = \CPU_Xreg_value_a3[17] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[17]  <= _0086_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0087_ = \CPU_Xreg_value_a3[18] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[18]  <= _0087_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0088_ = \CPU_Xreg_value_a3[19] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[19]  <= _0088_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0090_ = \CPU_Xreg_value_a3[20] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[20]  <= _0090_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0091_ = \CPU_Xreg_value_a3[21] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[21]  <= _0091_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0092_ = \CPU_Xreg_value_a3[22] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[22]  <= _0092_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0093_ = \CPU_Xreg_value_a3[23] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[23]  <= _0093_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0094_ = \CPU_Xreg_value_a3[24] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[24]  <= _0094_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0095_ = \CPU_Xreg_value_a3[25] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[25]  <= _0095_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0096_ = \CPU_Xreg_value_a3[26] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[26]  <= _0096_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0097_ = \CPU_Xreg_value_a3[27] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[27]  <= _0097_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0098_ = \CPU_Xreg_value_a3[28] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[28]  <= _0098_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0099_ = \CPU_Xreg_value_a3[29] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[29]  <= _0099_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0101_ = \CPU_Xreg_value_a3[30] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[30]  <= _0101_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0102_ = \CPU_Xreg_value_a3[31] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a4[31]  <= _0102_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0110_ = \CPU_Xreg_value_a4[0] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[0]  <= _0110_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0121_ = \CPU_Xreg_value_a4[1] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[1]  <= _0121_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0132_ = \CPU_Xreg_value_a4[2] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[2]  <= _0132_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0135_ = \CPU_Xreg_value_a4[3] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[3]  <= _0135_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0136_ = \CPU_Xreg_value_a4[4] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[4]  <= _0136_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0137_ = \CPU_Xreg_value_a4[5] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[5]  <= _0137_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0138_ = \CPU_Xreg_value_a4[6] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[6]  <= _0138_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0139_ = \CPU_Xreg_value_a4[7] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[7]  <= _0139_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0140_ = \CPU_Xreg_value_a4[8] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[8]  <= _0140_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0141_ = \CPU_Xreg_value_a4[9] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[9]  <= _0141_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0111_ = \CPU_Xreg_value_a4[10] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[10]  <= _0111_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0112_ = \CPU_Xreg_value_a4[11] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[11]  <= _0112_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0113_ = \CPU_Xreg_value_a4[12] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[12]  <= _0113_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0114_ = \CPU_Xreg_value_a4[13] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[13]  <= _0114_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0115_ = \CPU_Xreg_value_a4[14] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[14]  <= _0115_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0116_ = \CPU_Xreg_value_a4[15] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[15]  <= _0116_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0117_ = \CPU_Xreg_value_a4[16] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[16]  <= _0117_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0118_ = \CPU_Xreg_value_a4[17] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[17]  <= _0118_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0119_ = \CPU_Xreg_value_a4[18] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[18]  <= _0119_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0120_ = \CPU_Xreg_value_a4[19] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[19]  <= _0120_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0122_ = \CPU_Xreg_value_a4[20] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[20]  <= _0122_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0123_ = \CPU_Xreg_value_a4[21] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[21]  <= _0123_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0124_ = \CPU_Xreg_value_a4[22] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[22]  <= _0124_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0125_ = \CPU_Xreg_value_a4[23] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[23]  <= _0125_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0126_ = \CPU_Xreg_value_a4[24] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[24]  <= _0126_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0127_ = \CPU_Xreg_value_a4[25] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[25]  <= _0127_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0128_ = \CPU_Xreg_value_a4[26] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[26]  <= _0128_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0129_ = \CPU_Xreg_value_a4[27] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[27]  <= _0129_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0130_ = \CPU_Xreg_value_a4[28] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[28]  <= _0130_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0131_ = \CPU_Xreg_value_a4[29] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[29]  <= _0131_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0133_ = \CPU_Xreg_value_a4[30] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[30]  <= _0133_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$671 ) begin end
    _0134_ = \CPU_Xreg_value_a4[31] ;
  end
  always @(posedge clk) begin
      \CPU_Xreg_value_a5[31]  <= _0134_;
  end
  assign clk = CLK;
  assign CPU_reset_a0 = reset;
  assign CPU_clk_chandan_a0 = clk;
  assign CPU_pc_a0 = _0721_;
  assign CPU_imem_rd_en_a0 = _0501_;
  assign CPU_imem_rd_addr_a0 = { 28'h0000000, CPU_pc_a0[5:2] };
  assign CPU_instr_a1 = CPU_imem_rd_data_a1;
  assign CPU_inc_pc_a1 = _0297_;
  assign CPU_is_i_instr_a1 = _0513_;
  assign CPU_is_r_instr_a1 = _0516_;
  assign CPU_is_b_instr_a1 = _0395_;
  assign CPU_is_u_instr_a1 = _0517_;
  assign CPU_is_s_instr_a1 = _0518_;
  assign CPU_is_j_instr_a1 = _0400_;
  assign CPU_imm_a1 = _0726_;
  assign CPU_rs1_valid_a1 = _0521_;
  assign CPU_rs2_valid_a1 = _0523_;
  assign CPU_rd_valid_a1 = _0526_;
  assign CPU_funct3_valid_a1 = _0529_;
  assign CPU_funct7_valid_a1 = CPU_is_r_instr_a1;
  assign CPU_opcode_a1 = CPU_instr_a1[6:0];
  assign w_CPU_rs2_a1 = CPU_instr_a1[24:20];
  assign w_CPU_rs1_a1 = CPU_instr_a1[19:15];
  assign w_CPU_rd_a1 = CPU_instr_a1[11:7];
  assign CPU_funct3_a1 = CPU_instr_a1[14:12];
  assign CPU_funct7_a1 = CPU_instr_a1[31:25];
  assign CPU_dec_bits_a1 = { CPU_funct7_a1[5], CPU_funct3_a1, CPU_opcode_a1 };
  assign CPU_is_beq_a1 = _0300_;
  assign CPU_is_bne_a1 = _0301_;
  assign CPU_is_blt_a1 = _0302_;
  assign CPU_is_bge_a1 = _0303_;
  assign CPU_is_bltu_a1 = _0304_;
  assign CPU_is_bgeu_a1 = _0305_;
  assign CPU_is_add_a1 = _0306_;
  assign CPU_is_addi_a1 = _0307_;
  assign CPU_is_or_a1 = _0308_;
  assign CPU_is_ori_a1 = _0309_;
  assign CPU_is_xor_a1 = _0310_;
  assign CPU_is_xori_a1 = _0311_;
  assign CPU_is_and_a1 = _0312_;
  assign CPU_is_andi_a1 = _0313_;
  assign CPU_is_sub_a1 = _0314_;
  assign CPU_is_slti_a1 = _0315_;
  assign CPU_is_sltiu_a1 = _0316_;
  assign CPU_is_slli_a1 = _0317_;
  assign CPU_is_srli_a1 = _0318_;
  assign CPU_is_srai_a1 = _0319_;
  assign CPU_is_sll_a1 = _0320_;
  assign CPU_is_slt_a1 = _0321_;
  assign CPU_is_sltu_a1 = _0322_;
  assign CPU_is_srl_a1 = _0323_;
  assign CPU_is_sra_a1 = _0324_;
  assign CPU_is_load_a1 = _0325_;
  assign CPU_is_sb_a1 = _0326_;
  assign CPU_is_sh_a1 = _0327_;
  assign CPU_is_sw_a1 = _0328_;
  assign CPU_is_lui_a1 = _0329_;
  assign CPU_is_auipc_a1 = _0330_;
  assign CPU_is_jal_a1 = _0331_;
  assign CPU_is_jalr_a1 = _0332_;
  assign CPU_is_jump_a1 = _0502_;
  assign CPU_rf_rd_en1_a2 = CPU_rs1_valid_a2;
  assign CPU_rf_rd_index1_a2 = CPU_rs1_a2;
  assign CPU_rf_rd_en2_a2 = CPU_rs2_valid_a2;
  assign CPU_rf_rd_index2_a2 = CPU_rs2_a2;
  assign CPU_src1_value_a2 = _0588_;
  assign CPU_src2_value_a2 = _0589_;
  assign CPU_br_tgt_pc_a2 = _0289_;
  assign CPU_jalr_tgt_pc_a2 = _0290_;
  assign CPU_sltu_result_a3 = _0530_;
  assign CPU_sltiu_result_a3 = _0531_;
  assign CPU_result_a3 = _0590_[31:0];
  assign CPU_rf_wr_en_a3 = _0504_;
  assign CPU_rf_wr_index_a3 = _0616_;
  assign CPU_rf_wr_data_a3 = _0617_;
  assign CPU_taken_br_a3 = _0618_;
  assign CPU_valid_taken_br_a3 = _0412_;
  assign CPU_valid_load_a3 = _0413_;
  assign CPU_valid_a3 = _0500_;
  assign CPU_valid_jump_a3 = _0414_;
  assign CPU_dmem_rd_en_a4 = CPU_valid_load_a4;
  assign CPU_dmem_wr_en_a4 = _0415_;
  assign CPU_dmem_addr_a4 = CPU_result_a4;
  assign CPU_dmem_wr_data_a4 = CPU_src2_value_a4;
  assign CPU_ld_data_a5 = CPU_dmem_rd_data_a5;
  assign CPU_imem_rd_data_a1 = _0624_;
  assign CPU_rf_rd_data1_a2 = _0540_;
  assign CPU_rf_rd_data2_a2 = _0542_;
  assign w_CPU_dmem_rd_data_a4 = _0536_;
  assign \L1_CPU_Xreg[0].L1_wr_a3  = _0417_;
  assign \L1_CPU_Xreg[1].L1_wr_a3  = _0419_;
  assign \L1_CPU_Xreg[2].L1_wr_a3  = _0421_;
  assign \L1_CPU_Xreg[3].L1_wr_a3  = _0423_;
  assign \L1_CPU_Xreg[4].L1_wr_a3  = _0425_;
  assign \L1_CPU_Xreg[5].L1_wr_a3  = _0427_;
  assign \L1_CPU_Xreg[6].L1_wr_a3  = _0429_;
  assign \L1_CPU_Xreg[7].L1_wr_a3  = _0431_;
  assign \L1_CPU_Xreg[8].L1_wr_a3  = _0433_;
  assign \L1_CPU_Xreg[9].L1_wr_a3  = _0435_;
  assign \L1_CPU_Xreg[10].L1_wr_a3  = _0437_;
  assign \L1_CPU_Xreg[11].L1_wr_a3  = _0439_;
  assign \L1_CPU_Xreg[12].L1_wr_a3  = _0441_;
  assign \L1_CPU_Xreg[13].L1_wr_a3  = _0443_;
  assign \L1_CPU_Xreg[14].L1_wr_a3  = _0445_;
  assign \L1_CPU_Xreg[15].L1_wr_a3  = _0447_;
  assign \L1_CPU_Xreg[16].L1_wr_a3  = _0449_;
  assign \L1_CPU_Xreg[17].L1_wr_a3  = _0451_;
  assign \L1_CPU_Xreg[18].L1_wr_a3  = _0453_;
  assign \L1_CPU_Xreg[19].L1_wr_a3  = _0455_;
  assign \L1_CPU_Xreg[20].L1_wr_a3  = _0457_;
  assign \L1_CPU_Xreg[21].L1_wr_a3  = _0459_;
  assign \L1_CPU_Xreg[22].L1_wr_a3  = _0461_;
  assign \L1_CPU_Xreg[23].L1_wr_a3  = _0463_;
  assign \L1_CPU_Xreg[24].L1_wr_a3  = _0465_;
  assign \L1_CPU_Xreg[25].L1_wr_a3  = _0467_;
  assign \L1_CPU_Xreg[26].L1_wr_a3  = _0469_;
  assign \L1_CPU_Xreg[27].L1_wr_a3  = _0471_;
  assign \L1_CPU_Xreg[28].L1_wr_a3  = _0473_;
  assign \L1_CPU_Xreg[29].L1_wr_a3  = _0475_;
  assign \L1_CPU_Xreg[30].L1_wr_a3  = _0477_;
  assign \L1_CPU_Xreg[31].L1_wr_a3  = _0479_;
  assign \L1_CPU_Dmem[0].L1_wr_a4  = _0480_;
  assign \L1_CPU_Dmem[1].L1_wr_a4  = _0481_;
  assign \L1_CPU_Dmem[2].L1_wr_a4  = _0482_;
  assign \L1_CPU_Dmem[3].L1_wr_a4  = _0483_;
  assign \L1_CPU_Dmem[4].L1_wr_a4  = _0484_;
  assign \L1_CPU_Dmem[5].L1_wr_a4  = _0485_;
  assign \L1_CPU_Dmem[6].L1_wr_a4  = _0486_;
  assign \L1_CPU_Dmem[7].L1_wr_a4  = _0487_;
  assign \L1_CPU_Dmem[8].L1_wr_a4  = _0488_;
  assign \L1_CPU_Dmem[9].L1_wr_a4  = _0489_;
  assign \L1_CPU_Dmem[10].L1_wr_a4  = _0490_;
  assign \L1_CPU_Dmem[11].L1_wr_a4  = _0491_;
  assign \L1_CPU_Dmem[12].L1_wr_a4  = _0492_;
  assign \L1_CPU_Dmem[13].L1_wr_a4  = _0493_;
  assign \L1_CPU_Dmem[14].L1_wr_a4  = _0494_;
  assign \L1_CPU_Dmem[15].L1_wr_a4  = _0495_;
  assign _0537_ = CPU_imem_rd_addr_a1[3:0];
  assign _0539_ = CPU_rf_rd_index1_a2;
  assign _0541_ = CPU_rf_rd_index2_a2;
  assign _0535_ = CPU_dmem_addr_a4;
endmodule

module vsdbabysoc(OUT, reset, VCO_IN, ENb_CP, ENb_VCO, REF, VREFH);
  wire CLK;
  input ENb_CP;
  wire ENb_CP;
  input ENb_VCO;
  wire ENb_VCO;
  output OUT;
  wire OUT;
  input REF;
  wire REF;
  wire [9:0] RV_TO_DAC;
  input VCO_IN;
  wire VCO_IN;
  input VREFH;
  wire VREFH;
  input reset;
  wire reset;
  riscv_chandan core (
    .CLK(CLK),
    .OUT(RV_TO_DAC),
    .reset(reset)
  );
  avsddac dac (
    .D(RV_TO_DAC),
    .OUT(OUT),
    .VREFH(VREFH)
  );
  avsdpll pll (
    .CLK(CLK),
    .ENb_CP(ENb_CP),
    .ENb_VCO(ENb_VCO),
    .REF(REF),
    .VCO_IN(VCO_IN)
  );
endmodule
